{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"A bite of CS","text":""},{"location":"#notes","title":"Notes","text":""},{"location":"#wu-wu-u","title":"Wu-wu-u","text":""},{"location":"#tonycrane","title":"Tonycrane","text":""},{"location":"#yang-xijie","title":"Yang-xijie","text":""},{"location":"#cs-fufu","title":"CS-fufu","text":""},{"location":"#classes","title":"Classes","text":""},{"location":"#cs61a","title":"CS61A","text":""},{"location":"#learning","title":"Learning","text":""},{"location":"#_1","title":"\u547d\u4ee4\u884c\u7684\u827a\u672f","text":""},{"location":"#debugging","title":"Debugging","text":""},{"location":"#gdb-gef","title":"gdb gef","text":""},{"location":"cs/","title":"Computer Science","text":""},{"location":"cs/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u7f16\u7a0b\u8bed\u8a00<ul> <li>C/C++ </li> <li>Python</li> </ul> </li> <li>\u8ba1\u7b97\u673a\u7cfb\u7edf<ul> <li>\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1</li> <li>\u8ba1\u7b97\u673a\u7ec4\u6210</li> </ul> </li> <li>\u7b97\u6cd5\u76f8\u5173<ul> <li>\u6570\u636e\u7ed3\u6784\u57fa\u7840</li> <li>\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784</li> </ul> </li> <li>\u7406\u8bba\u76f8\u5173<ul> <li>\u79bb\u6563\u6570\u5b66</li> </ul> </li> <li>\u5de5\u5177\u7c7b<ul> <li>Git</li> <li>Latex</li> <li>Vim</li> <li>GDB</li> <li>Make</li> <li>Docker</li> <li>Mkdocs </li> </ul> </li> </ul>"},{"location":"cs/pl/","title":"Index","text":"<p>!!! warning     \ud83d\udea7 \u706b\u901f\u65bd\u5de5\u4e2d</p>"},{"location":"cs/pl/c_cpp/C/c/","title":"C","text":""},{"location":"cs/pl/c_cpp/C/c/#_1","title":"\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7","text":"\u4f18\u5148\u7ea7 \u8fd0\u7b97\u7b26 \u7ed3\u5408\u5f8b 1 \u540e\u7f00\u8fd0\u7b97\u7b26\uff1a<code>[] () \u00b7 -&gt;</code> \u4ece\u5de6\u5230\u53f3 2 \u4e00\u5143\u8fd0\u7b97\u7b26\uff1a<code>++ -- ! ~ +\uff08\u6b63\uff09 -\uff08\u8d1f\uff09\u00a0* &amp; sizeof\u00a0\u7c7b\u578b\u8f6c\u6362</code> \u4ece\u53f3\u5230\u5de6 3 \u4e58\u9664\u6cd5\u8fd0\u7b97\u7b26\uff1a<code>* / %</code> \u4ece\u5de6\u5230\u53f3 4 \u52a0\u51cf\u6cd5\u8fd0\u7b97\u7b26\uff1a<code>+ -</code> \u4ece\u5de6\u5230\u53f3 5 \u79fb\u4f4d\u8fd0\u7b97\u7b26\uff1a<code>&lt;&lt; &gt;&gt;</code> \u4ece\u5de6\u5230\u53f3 6 \u5173\u7cfb\u8fd0\u7b97\u7b26\uff1a<code>&lt; &lt;= &gt; &gt;=</code> \u4ece\u5de6\u5230\u53f3 7 \u76f8\u7b49\u8fd0\u7b97\u7b26\uff1a<code>== !=</code> \u4ece\u5de6\u5230\u53f3 8 \u4f4d\u8fd0\u7b97\u7b26\u00a0AND\uff1a<code>&amp;</code> \u4ece\u5de6\u5230\u53f3 9 \u4f4d\u8fd0\u7b97\u7b26\u00a0XOR\uff1a<code>^</code> \u4ece\u5de6\u5230\u53f3 10 \u4f4d\u8fd0\u7b97\u7b26\u00a0OR\uff1a<code>\\|</code> \u4ece\u5de6\u5230\u53f3 11 \u903b\u8f91\u8fd0\u7b97\u7b26\u00a0AND\uff1a<code>&amp;&amp;</code> \u4ece\u5de6\u5230\u53f3 12 \u903b\u8f91\u8fd0\u7b97\u7b26\u00a0OR\uff1a<code>\\|\\|</code> \u4ece\u5de6\u5230\u53f3 13 \u6761\u4ef6\u8fd0\u7b97\u7b26\uff1a<code>?:</code> \u4ece\u53f3\u5230\u5de6 14 \u8d4b\u503c\u8fd0\u7b97\u7b26\uff1a<code>= += -= *= /= %= &amp;= ^= \\|= &lt;&lt;= &gt;&gt;=</code> \u4ece\u53f3\u5230\u5de6 15 \u9017\u53f7\u8fd0\u7b97\u7b26\uff1a<code>,</code> \u4ece\u5de6\u5230\u53f3"},{"location":"cs/pl/c_cpp/C/c/#_2","title":"\u6570\u7ec4\u4e0e\u6307\u9488","text":""},{"location":"cs/pl/c_cpp/C/c/#_3","title":"\u5b57\u7b26\u4e32","text":"<ul> <li>\u4ee5<code>\\0</code>\u7ed3\u5c3e\u7684\u5b57\u7b26\u6570\u7ec4</li> </ul> <p>=== \"\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u7684\u5185\u5b58\u5206\u914d\"     !!! info inline end         \u7f16\u8bd1\u5668\u4f1a\u5c06\u4ee3\u7801\u4e2d\u7684\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff0c\u8fde\u7eed\u5730\u5b58\u50a8\u5728\u4e00\u7247\u53ea\u8bfb\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\uff0c\u4e8e\u662f\u5c31\u6709\u8fd9\u4e2a\u60c5\u51b5\u7684\u53d1\u751f</p> <pre><code>```c\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\nint main(){\n    const char *msg=\"Hello world!\";\n    printf(\"msg:%s\\n\",msg);\n    msg+=strlen(\"Hello world!\");\n    msg++;\n    printf(\"%s\\n\",msg);\n    return 0;\n}\n//output:\nHello world!\nmsg:%s\n```\n</code></pre> <p>=== \"\u5185\u5b58\u5206\u5e03\"     </p>"},{"location":"cs/pl/c_cpp/C/c/#_4","title":"\u6307\u9488\u6570\u7ec4\u4e0e\u6570\u7ec4\u6307\u9488","text":"<pre><code>char *a[]={\"Hello\",\"World\",\"I Love U\"}\n//a\u662f\u4e00\u4e2a\u5b58\u653e\u6307\u9488\u7684\u6570\u7ec4\uff0c\u5176\u4e2d\u5404\u6307\u9488\u5206\u522b\u6307\u5411\u5bf9\u5e94\u5b57\u7b26\u4e32\n</code></pre> <p>??? note \"int *p[5] \u548cint (*p)[5]\u7684\u533a\u522b\"     <code>c     int *p[5]={p1,p2,p3,p4,p5};     //\u8fd9\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u5185\u6709\u4e94\u4e2a\u6307\u9488\uff0c\u5404\u6307\u5411int\u7c7b\u578b     int (*p)[5];     int a[5]={1,2,3,4,5};     p=a;     //\u62ec\u53f7\u4f18\u5148\uff0cp\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u6307\u9488\uff0c\u6307\u5411\u542b\u67095\u4e2aint\u7c7b\u578b\u7684\u6570\u7ec4</code></p>"},{"location":"cs/pl/c_cpp/C/c/#_5","title":"\u51fd\u6570\u6307\u9488","text":"<ul> <li>\u51fd\u6570\u6307\u9488\u80fd\u4ee5\u975e\u6210\u5458\u51fd\u6570\u6216\u9759\u6001\u6210\u5458\u51fd\u6570\u7684\u5730\u5740\u521d\u59cb\u5316\u3002\u7531\u4e8e\u5b58\u5728\u51fd\u6570\u5230\u6307\u9488\u7684\u9690\u5f0f\u8f6c\u6362\uff0c\u53d6\u5740\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5ffd\u7565\uff1a</li> </ul> <p>!!! info     \u4efb\u4f55\u51fd\u6570\u6307\u4ee3\u5668\u8868\u8fbe\u5f0f\uff0c\u5728\u7528\u4e8e\u5f02\u4e8e\u4e0b\u5217\u8bed\u5883\u65f6</p> <pre><code>- \u4f5c\u4e3a\u53d6\u5740\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\u6570\n- \u4f5c\u4e3a\u00a0`sizeof`\u00a0\u7684\u64cd\u4f5c\u6570\n\n\u4f1a\u7ecf\u5386\u5230\u6307\u5411\u8868\u8fbe\u5f0f\u6240\u6307\u4ee3\u51fd\u6570\u7684\u6307\u9488\u7684\u8f6c\u6362\u3002\n\n```C\nint (*f_ptr)(int);\nint * f_ptr(int);\n//\u8fd9\u4e24\u4e2a\u5b8c\u5168\u4e0d\u540c\uff0c\u4e00\u4e2a\u662f\u6307\u9488\uff0c\u4e00\u4e2a\u662f\u51fd\u6570!!!\n```\n</code></pre> <ul> <li>\u6bcf\u6b21\u5c1d\u8bd5\u5bf9\u00a0function\u00a0\u89e3\u5f15\u7528\uff0c\u90fd\u4f1a\u8feb\u4f7f\u7f16\u8bd1\u5668\u5c06\u5b83\u8f6c\u6362\u4e3a\u51fd\u6570\u6307\u9488=</li> </ul> <p>=== \"E.g.1\"     <code>c     function(20);     (function)(20);     (*&amp;function)(20);     (&amp;function)(20); //\u7f3a\u5931\u4e86 \u89e3\u5f15\u7528\uff0c\u9274\u4e8e C \u6807\u51c6\u5141\u8bb8\u901a\u8fc7\u51fd\u6570\u6307\u9488\u8c03\u7528\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5bf9\u6b64\u4e5f\u6ca1\u4ec0\u4e48\u610f\u89c1\u3002     (*function)(20);     (***********function)(20);      //\u6240\u6709\u503c\u5747\u4e3a20\uff0c\u90fd\u662f\u7b49\u6548\u7684</code> === \"E.g.2\"     <code>c     int function(int arg)     {         return arg;     }     int (*func_ptr)(int);     func_ptr = &amp;function;     func_ptr = function;     //\u6b64\u5904function\u7684int (int)\u7c7b\u578b\uff0c\u9690\u5f0f\u8f6c\u6362\u4e3aint (*)(int)     (*func_ptr)(20);  //\u4eba\u755c\u65e0\u5bb3\uff0c20     func_ptr(20); //\u4eba\u755c\u65e0\u5bb3\uff0c20     (****func_ptr)(20);// \u9690\u5f0f\u8f6c\u63623\u6b21     (&amp;func_ptr)(20);//Error</code></p> <pre><code>!!! note \"\u89e3\u6790\"\n    \u6b64\u5904\u5c06(&amp;func_ptr)(20)\u6311\u51fa\u6765\u89e3\u6790\uff0c\u4e0d\u59a8\u7406\u89e3\u6210\uff1a\n    ```c\n    int (*func_ptr)(int) = &amp;function;    // \u8fd9\u662f\u4e4b\u524d\u7684\n    int (**second_ptr)(int) = &amp;func_ptr; // \u8fd9\u662f\u6211\u4eec\u6b63\u5728\u505a\u7684\n    second_ptr(20);                      // \u6211\u4eec\u60f3\u8fd9\u6837\n    ```\n    \u5728\u8fd9\u91cc\uff0csecond_ptr\u00a0\u5df2\u7ecf\u662f\u4e2a\u4e8c\u7ea7\u6307\u9488\u4e86\u3002\u51fd\u6570\u5230\u51fd\u6570\u6307\u9488\uff08\u5b83\u662f\u4e2a\u4e00\u7ea7\u6307\u9488\uff09\u7684\u8f6c\u6362\u8fc7\u7a0b\u4e2d\uff0c\u5730\u5740\u503c\u662f\u4e0d\u4f1a\u6539\u53d8\u7684\uff0c\u5c31\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u53ef\u6267\u884c\u4ee3\u7801\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u95ee\u9898\u5728\u4e8e\uff0c\u4e8c\u7ea7\u6307\u9488\u7684\u503c\u4e0d\u662f\u00a0function\u00a0\u7684\u5730\u5740\uff0c\u800c\u662f\u00a0func_ptr\u00a0\u8fd9\u4e2a\u53d8\u91cf\u7684\u5730\u5740\u3002\n</code></pre> <p>=== \"E.g.3 \u53e6\u5916\u9690\u5f0f\u8f6c\u6362\u7684\u60c5\u51b5\"     ```c     int function(int arg)     {         return arg;     }     int func_two(int a, int f(int arg))     {         return 3 * f(a);     }</p> <pre><code>int a = 1;\nint b = func_two(a, function);\n```\n\n!!! note\n    **`func_two`\u00a0\u7684\u4e24\u4e2a\u53c2\u6570\u7c7b\u578b\u5206\u522b\u662f\u00a0`int`\u00a0\u548c\u00a0`int (int)`\uff0c\u4f46\u662f\u8c03\u7528\u65f6\u5374\u4f20\u5165\u4e86\u4e00\u4e2a\u51fd\u6570\u6307\u9488**\n\n    \u8fd9\u91cc\u53c8\u53d1\u751f\u4e86\u9690\u5f0f\u8f6c\u6362 **:**\n\n    - \u4e0d\u8fc7\u9700\u8981**\u6ce8\u610f\u53d1\u751f\u9690\u5f0f\u8f6c\u6362\u7684\u4f4d\u7f6e**\u3002`func_two`\u00a0\u7684**\u7b2c\u4e8c\u4e2a\u5f62\u53c2\u5b9e\u9645\u4e0a\u662f\u00a0`int (*)(int)`\u00a0\uff0c\u800c\u975e\u5b57\u9762\u4e0a\u7684\u00a0`int (int)`**\u3002**\u8fd9\u5c31\u548c\u00a0`void f(int a[])`\u00a0\u5b9e\u9645\u4e0a\u662f\u00a0`void f(int *a)`\u00a0\u4e00\u6837**\uff0c\u540c\u6837\u662f\u51fa\u4e8e\u8282\u7ea6\u8d44\u6e90\u7684\u8003\u8651\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7f16\u8bd1\u5668\u773c\u4e2d\u7684\u00a0`func_two`\u00a0\u662f\u00a0`int func_two(int a, int (*f)(int)`\u3002\n</code></pre> <p>=== \"E.g.4  \u4e0etypedef\u7ed3\u5408\"     <code>c     typedef int F (int a);     F g, h;     int (*p[])(int) ={g, h}; //p\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u6570\u7ec4     int q(F* array[]);</code></p> <pre><code>```c title=\"typedef\u4e0e\u6570\u7ec4\u548c\u51fd\u6570\u7ed3\u5408\u65f6\"\ntypedef int INT_ARRAY_100[100];\nINT_ARRAY_100 arr;\n//\u7b49\u4ef7\u4e8e int arr[100];\ntypedef int *(*PFun)(int,char*);\nPFun a[5];\n// \u7b49\u4ef7\u4e8eint*(*a[5])(int,char*);\n```\n</code></pre>"},{"location":"cs/pl/c_cpp/C/c/#_6","title":"\u5176\u4ed6\u6ce8\u610f\u9879","text":"<ul> <li><code>&amp;</code>\u53ea\u80fd\u5bf9\u53d8\u91cf\u53d6\u5730\u5740,\u5730\u5740\u7684\u5927\u5c0f\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\u548c\u8fd0\u884c\u7cfb\u7edf\u4f4d\u6570  \u5730\u5740\u662f\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u5b83\u8868\u793a\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u5b57\u8282\u3002\u6307\u9488\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u5176\u5b58\u50a8\u4e86\u4e00\u4e2a\u5730\u5740\u3002\u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6240\u6709\u6307\u9488\u7c7b\u578b\u7684\u5927\u5c0f\u90fd\u662f\u76f8\u540c\u7684\u3002</li> <li> <p>\u6307\u9488\u7684\u672c\u8eab\u7684\u52a0\u51cf\uff0c\u662f\u5bf9\u5730\u5740\u8fdb\u884c\u4e00\u4e2a\u7c7b\u578b\u5bf9\u5e94\u5b57\u8282\u957f\u7684\u53d8\u5316</p> <p><code>c int a[10]={1,2,3,4,5,6,7,8,9,0};    int *p=&amp;i;    p -&gt; a[0];    (p+1) -&gt; a[1]    p=0x---1c;    p+1=0x---20;</code></p> </li> <li> <p>malloc\u642d\u914dfree\uff0cfree\u8981\u5728\u7533\u8bf7\u5185\u5b58\u7684\u9996\u5730\u5740</p> <p><code>c int *p; p=(int*)malloc(n*sizeof (int)); free(p);</code></p> </li> <li> <p>\u5b57\u7b26\u4e32\u5b9a\u4e49\u65f6\u7684\u5dee\u5f02:</p> <p><code>c char *s1=\"Hello,World!\" ; //\u6b64\u5904s1\u6307\u5411\u4e00\u4e2a\u5b58\u653e\u4e8e\u4ee3\u7801\u533a\u7684\u201dHello\uff0cWorld\uff01\u201c\uff0c\u5176\u5730\u5740\u6781\u5c0f\u4e14\u53ea\u8bfb char s2[]=\"Hello,World!\" ; /*\u6b64\u5904s2\u662f\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u5b58\u653e\u201cHello\uff0cWorld\uff01\u201d\u7684\u5355\u5143\u548c'\\0'\uff0c\u662f\u4e00\u4e2a\u5904\u4e8e\u9ad8\u5730\u5740\u7684\u53ef\u4fee\u6539\u6570\u7ec4*/</code></p> </li> <li> <p>\u5e38\u89c1\u9519\u8bef\uff1a\u6307\u9488\u672a\u521d\u59cb\u5316</p> <p><code>c char *string; scanf(\"%s\",string); //\u5c40\u90e8\u53d8\u91cfstring \u968f\u673a\u6307\u5411\u67d0\u4e2a\u5730\u65b9\uff0c\u8fdb\u884cscanf\u64cd\u4f5c\u65f6\u4e0d\u4e00\u5b9a\u51fa\u9519\uff0c\u4f46\u82e5\u6307\u5411\u7684\u5185\u5b58\u4f1a\u5bfc\u81f4\u6709\u5bb3\u5219\u7a0b\u5e8f\u5d29\u6e83</code></p> </li> <li> <p>\u4e8c\u7ef4\u6570\u7ec4\u521d\u59cb\u5316\u65f6\u7b2c\u4e8c\u4e2a[ ]\u987b\u6709\u786e\u5207\u5927\u5c0f</p> <p><code>c char a[][]={\"Hello\",} // Error</code></p> </li> <li> <p>\u6307\u9488\u4f5c\u5dee\u662f\u5bf9\u5e94\u7c7b\u578b\u7684\u4e2a\u6570\u5dee,\u4e0d\u540c\u7c7b\u578b\u6307\u9488\u4e0d\u80fd\u505a\u5dee</p> <p><code>c int s[]={1,2,3,4,5,6}; int *p1,*p2; p1=&amp;s[0],p2=&amp;s[4]; p1-p2=4 //\u800c\u4e0d\u662f4*4=16</code></p> </li> <li> <p>char\u7c7b\u578b\u6570\u7ec4\u672a\u521d\u59cb\u5316\u90e8\u5206\u7684\u9ed8\u8ba4\u503c\u53d6\u51b3\u4e8e\u5b83\u662f\u5728\u54ea\u91cc\u5b9a\u4e49\u7684\u3002\u5982\u679c\u5b83\u662f\u5728\u5168\u5c40\u6216\u9759\u6001\u533a\u57df\u5b9a\u4e49\u7684\uff0c\u90a3\u4e48\u5b83\u7684\u9ed8\u8ba4\u503c\u662f\u7a7a\u5b57\u7b26\uff0c\u5373 \u2018\\0\u2019\u3002\u5982\u679c\u5b83\u662f\u5728\u5c40\u90e8\u533a\u57df\u5b9a\u4e49\u7684\uff0c\u90a3\u4e48\u5b83\u7684\u9ed8\u8ba4\u503c\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u53ef\u80fd\u662f\u968f\u673a\u7684\u5783\u573e\u503c\u3002</p> <p><code>c char s[10]={65,0,97}; //\u91cc\u9762\u5bf9\u5e94\u7684\u5143\u7d20\u5c31\u662fASCII\u7801\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u76840\u7b49\u4ef7\u4e8e'\\0' char s[10]=\"Happy\"  \u7b49\u4ef7\u4e8echar s[10]={\"Happy\"}  \u7b49\u4ef7\u4e8echar s[10]={'H','a','p','p','y'}\u7b49\u4ef7\u4e8e char s[10]={'H','a','p','p','y','\\0'}</code></p> <p>int\u7c7b\u578b\u6570\u7ec4\u672a\u521d\u59cb\u5316\u90e8\u5206\u7684\u9ed8\u8ba4\u503c\u53d6\u51b3\u4e8e\u5b83\u662f\u5728\u54ea\u91cc\u5b9a\u4e49\u7684\u3002\u5982\u679c\u5b83\u662f\u5728\u5168\u5c40\u6216\u9759\u6001\u533a\u57df\u5b9a\u4e49\u7684\uff0c\u90a3\u4e48\u5b83\u7684\u9ed8\u8ba4\u503c\u662f0\u3002\u5982\u679c\u5b83\u662f\u5728\u5c40\u90e8\u533a\u57df\u5b9a\u4e49\u7684\uff0c\u90a3\u4e48\u5b83\u7684\u9ed8\u8ba4\u503c\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u53ef\u80fd\u662f\u968f\u673a\u7684\u5783\u573e\u503c\u3002</p> </li> <li> <p>\u4f20\u5165\u51fd\u6570\u4e2d\u7684\u6570\u7ec4\u662f\u4e2a\u6307\u9488\uff0c\u6240\u4ee5\u6b64\u65f6<code>sizeof (a)</code>\u5c31\u53ea\u4f1a\u5f97\u5230<code>pointer</code>\u6240\u5360\u7684\u5927\u5c0f(32\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u6307\u9488\u7684\u5927\u5c0f\u662f4\u5b57\u8282\uff1b64\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u6307\u9488\u7684\u5927\u5c0f\u662f8\u4e2a\u5b57\u8282)\uff0c\u800c\u4e0d\u662f\u50cf\u4e3b\u51fd\u6570\u4e2d\u662f\u4e00\u6574\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\u3002</p> </li> <li> <p>\u4ee5 <code>main</code> \u51fd\u6570\u4e3a\u4f8b\uff0c\u5176\u6709\u4e24\u79cd\uff08\u6807\u51c6\u89c4\u5b9a\u7684\uff09\u5f62\u5f0f\uff1a</p> <p><code>c int main(void);                    // \u7c7b\u578b\u4e3a int(void)int main(int argc, char *argv[]);  // \u7c7b\u578b\u4e3a int(int, char *[]) //argc \u662f\u8bfb\u5165\u7684\u547d\u4ee4\u6570\u91cf\uff1b //argv[]\u662f\u5c06\u547d\u4ee4\u4f5c\u4e3a\u5b57\u7b26\u4e32\u5b58\u5165\u6570\u7ec4\u4e2d ,\u5219argv[0]\u5c31\u662f\u8fd0\u884c\u7a0b\u5e8f\u65f6\u7684\u4ee3\u7801;</code></p> </li> <li> <p>\u60ac\u5782\u6307\u9488(dangling pointer) \u5728\u8fd9\u91cc <code>pfi</code> \u79f0\u4e3a\u60ac\u5782\u6307\u9488\uff08dangling pointer\uff09\uff0c\u5b83\u6307\u5411\u4e86\u4e00\u4e2a\u5df2\u7ecf\u88ab\u9500\u6bc1\u7684\u5bf9\u8c61\u3002\u4f7f\u7528\u60ac\u5782\u6307\u9488\u662f\u672a\u5b9a\u4e49\u884c\u4e3a\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002</p> <p><code>c int *dangling() {     int i = 0xdeadbeef;     int *p = &amp;i;     return p; } int main() {     int *pfi = dangling();     MAGIC(pfi);     MAGIC(*pfi); }</code></p> <ul> <li>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff1a</li> </ul> <p><code>c   char *get_a_string() {   char str[] = \"Hello world!\";   return str;   }   int main() {   char *str = get_a_string();   printf(\"%s\\n\", str);   }   //\u4ec0\u4e48\u4e5f\u4e0d\u4f1a\u8f93\u51fa   //str \u4f5c\u4e3a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5176\u751f\u547d\u5468\u671f\u5728 get_a_string \u51fd\u6570\u8fd4\u56de\u65f6\u7ed3\u675f\u3002</code></p> <ul> <li>\u5b58\u50a8\u671f:<ul> <li>\u9759\u6001\u5b58\u50a8\u671f\uff08static\uff09 \u5728\u7a0b\u5e8f\u5f00\u59cb\u65f6\u521b\u5efa\uff0c\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u9500\u6bc1\u3002\u5982\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u3002</li> <li>\u81ea\u52a8\u5b58\u50a8\u671f\uff08automatic\uff09 \u5728\u7a0b\u5e8f\u8fdb\u5165\u4f5c\u7528\u57df\u65f6\u521b\u5efa\uff0c\u5728\u7a0b\u5e8f\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\u9500\u6bc1\u3002\u5982\u5c40\u90e8\u53d8\u91cf\u3002</li> <li>\u52a8\u6001\u5206\u914d\u5b58\u50a8\u671f\uff08allocated\uff09 \u5728\u7a0b\u5e8f\u663e\u5f0f\u5730\u5206\u914d\u5185\u5b58\u65f6\u521b\u5efa\uff0c\u5728\u7a0b\u5e8f\u663e\u5f0f\u5730\u91ca\u653e\u5185\u5b58\u65f6\u9500\u6bc1\u3002\u5982 malloc() \u5206\u914d\u7684\u5185\u5b58\u3002</li> </ul> </li> <li>\u4e8c\u7ea7\u6307\u9488\u4e0d\u53ef\u6307\u5411\u666e\u901a\uff08\u975e\u6307\u9488\uff09\u53d8\u91cf</li> <li>*\u4e0e++**\u7684\u78b0\u649e</li> </ul> <p><code>c int a[]={1,2,3,4,5,6}; int *p=a; int **pp=&amp;p; printf(\"%d\",*(p++));   //1 printf(\"%d\",**pp);    //2</code></p> </li> </ul>"},{"location":"cs/pl/c_cpp/C/c/#_7","title":"\u6570\u636e\u7c7b\u578b","text":""},{"location":"cs/pl/c_cpp/C/c/#_8","title":"\u9690\u5f0f\u8f6c\u6362","text":"<p>!!! note \"\u9690\u5f0f\u8f6c\u6362\u7684\u7c7b\u578b\"     \u4e0b\u5217\u7b97\u672f\u8fd0\u7b97\u7b26\u7684\u5b9e\u53c2\u4f1a\u7ecf\u5386\u9690\u5f0f\u8f6c\u6362\uff0c\u4ee5\u83b7\u5f97\u516c\u5171\u5b9e\u6570\u7c7b\u578b\uff0c\u8fd9\u662f\u6267\u884c\u8ba1\u7b97\u6240\u7528\u7684\u7c7b\u578b\uff1a     \u4e8c\u5143\u7b97\u672f * / % + -     \u5173\u7cfb\u8fd0\u7b97\u7b26 &lt;  &gt;  &lt;=  &gt;=  ==  !=     \u4e8c\u5143\u9010\u4f4d\u7b97\u672f &amp; ^ |     \u6761\u4ef6\u8fd0\u7b97\u7b26 ?: - <code>char/short</code>\u4f1a\u88ab<code>int</code>\u8f6c\u6362\uff0c<code>int</code>\u4f1a\u88ab<code>float/double</code>\u8f6c\u6362\uff0c<code>float</code>\u4f1a\u88ab<code>double</code>\u8f6c\u6362 </p> <ul> <li> <p>\u5c0f\u4e8e<code>int</code>\u7c7b\u578b\u7684\u53d8\u91cf\u4f20\u7ed9<code>printf</code>\u65f6\u4f1a\u8f6c\u6210<code>int</code>,<code>float</code>\u4f1a\u88ab\u8f6c\u6210<code>double</code>     \u4f46<code>scanf</code>\u4e0d\u4f1a\uff0c\u4e14\u8f93\u5165\u65f6\u9700\u8981\u7528\u5bf9\u5e94\u7684\u89c4\u8303\u5316\u8f93\u5165\u7b26\u53f7</p> </li> <li> <p><code>int</code>\u7c7b\u578b\u7684\u503c\u5728\u4f7f\u7528<code>%f</code>\u8f93\u51fa\u65f6\uff0c\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002\u8fd9\u662f\u56e0\u4e3a<code>%f</code>\u8981\u6c42\u7684\u53c2\u6570\u662f<code>double</code>\u7c7b\u578b\u7684\uff0c\u5360\u75288\u4e2a\u5b57\u8282\uff0c\u800c<code>int</code>\u7c7b\u578b\u7684\u53c2\u6570\u53ea\u5360\u75284\u4e2a\u5b57\u8282\u3002<code>printf</code>\u51fd\u6570\u4f1a\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d68\u4e2a\u5b57\u8282\u7684\u6570\u636e\uff0c\u7136\u540e\u6309\u7167\u6d6e\u70b9\u6570\u7684\u5b58\u50a8\u683c\u5f0f\u6765\u89e3\u6790\uff0c\u8fd9\u6837\u5c31\u4f1a\u5f97\u5230\u9519\u8bef\u7684\u7ed3\u679c\u3002(\u8fd9\u79cd\u8f6c\u6362\u65b9\u5f0f\uff0c\u4e0d\u540c\u4e8e\u6570\u636e\u7c7b\u578b\u95f4\u7684\u76f4\u63a5\u8f6c\u6362-&gt;\u6807\u51c6\u7684\u8865\u7801\u6216\u8005IEEE\u8868\u793a)</p> </li> </ul>"},{"location":"cs/pl/c_cpp/C/c/#_9","title":"\u5185\u5b58\u5927\u5c0f","text":"<p>=== \"int,short,char\"     int\u53604\u4e2a\u5b57\u8282\uff0cshort\u53602\u4e2a\u5b57\u8282\uff0cchar\u53601\u4e2a\u5b57\u8282\uff1b     ```c     short s[][5]={301,302,303,304,305,306,307,308,309,0};     sizeof s=225=20 //\u521d\u59cb\u5316\u4e3as[2][5] short\u53602\u4e2a\u5b57\u8282\uff0c\u6545\u7b54\u6848\u4e3a20     strlen((char )s)=18 / char \u5f3a\u5236\u8f6c\u6362\u4f1a\u5728\u4e8c\u8fdb\u5236\u4e0b\u4e00\u4e2a\u5b57\u8282\u4e00\u4e2a\u5b57\u8282\u7684\u8f6c\u6362\uff0c     \u800cstrlen\u4f1a\u5728\u8bfb\u5230'\\0' \u5373 00000000     \u6b64\u5904301 \u662f 00000001 00101101 \u5373\u8f6c\u621045([0])\u548c1([1]) \u4e24\u4e2a\u5143\u7d20     \u540c\u7406 \u540e\u9762\u7684\u5404\u5143\u7d20\u76f4\u81f30\u4e4b\u524d\u90fd\u4e0d\u4f1a\u51fa\u73b0 00000000\uff0c\u6240\u4ee5strlen\u5c31\u662f29=18 */</p> <pre><code>short a[]={300,177,0}; \nstrlen((char *)a)=3; //\u56e0\u4e3a177 \u662f 00000000 10110001 \u5728\u7b2c\u56db\u4e2a\u5143\u7d20\u65f6\u51fa\u73b00 \nint b[]={216,5446,65464,0};\nstrlen((char *)b)=1; // 216 \u662f00000000 00000000 00000000 11011000\n```\n</code></pre> <p>=== \"\u7ed3\u6784\u4f53\"     \u7ed3\u6784\u4f53\u7684\u5927\u5c0f\u662f\u5176\u6210\u5458\u5927\u5c0f\u7684\u603b\u548c\uff0c\u52a0\u4e0a\u5bf9\u9f50\u6240\u9700\u7684\u586b\u5145\u5b57\u8282     ```c     struct point {         char a;         long long b;         char c;         double d;     }     struct point p; /\u6b64\u65f6\u5360\u7528\u6574\u657432\u4e2a\u5b57\u8282\uff0c\u56e0\u4e3a\u5bf9\u9f50\u7684\u7f18\u6545\uff0clonglong/double\u662f\u516b\u4f4d\uff0c\u4e0d\u4f1a\u4e0echar     \u7d27\u6328\u800c\u662f\u817e\u632a\u51fa7\u4e2a\u5b57\u8282\uff0c\u518d\u5360\u75288\u4e2a\u5b57\u8282/</p> <pre><code>struct point {\n    char a;\n    char c;\n        long long b;\n    double d;\n}\nstruct point p;//\u6b64\u65f6\u5360\u7528\u7684\u5c31\u662f24\u4e2a\u5b57\u8282\uff0c2+6+8+8\n```\n</code></pre> <p>=== \"\u8054\u5408\u4f53\"     !!! note         \u8054\u5408\u4f53\u7684\u5927\u5c0f\u662f\u5176\u4e2d\u5360\u7528\u5185\u5b58\u7684\u6700\u5927\u7684\u7c7b\u578b\u7684\u5927\u5c0f\uff0c\u5b83\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u5185\u5b58\u7a7a\u95f4\u4e2d\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff0c\u4f46\u662f\u6bcf\u6b21\u53ea\u80fd\u4f7f\u7528\u5176\u4e2d\u4e00\u4e2a\u6210\u5458\u3002\u8054\u5408\u4f53\u7684\u4f18\u70b9\u662f\u8282\u7701\u4e86\u5185\u5b58\u7a7a\u95f4\uff0c\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684\u60c5\u51b5\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002\u8054\u5408\u4f53\u7684\u7f3a\u70b9\u662f\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528\u591a\u4e2a\u6210\u5458\uff0c\u800c\u4e14\u53ef\u80fd\u4f1a\u9020\u6210\u6570\u636e\u7684\u6df7\u4e71\u6216\u635f\u574f\u3002     <code>c     union Data {         int i;         float f;         char str[20];     };     union Data data;     data.i = 10;     data.f = 3.14;     strcpy(data.str, \"Hello\"); // (1)</code>     1.  \u8981\u8bbf\u95ee\u8054\u5408\u4f53\u7684\u6210\u5458\uff0c\u53ef\u4ee5\u4f7f\u7528\u6210\u5458\u8bbf\u95ee\u8fd0\u7b97\u7b26\uff08.\uff09\u6216\u8005\u6307\u9488\u8fd0\u7b97\u7b26\uff08-&gt;\uff09\u3002         \u6240\u4ee5\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u6700\u540e\u53ea\u80fd\u5f97\u5230 data.str \u7684\u503c\uff0c\u800c data.i \u548c data.f \u7684\u503c\u4f1a\u88ab\u7834\u574f\u3002         \u5982\u679c\u8981\u4fdd\u7559\u5404\u4e2a\u6210\u5458\u7684\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u8054\u5408\u4f53\u53d8\u91cf\uff0c\u6216\u8005\u5728\u540c\u4e00\u65f6\u95f4\u53ea\u4f7f\u7528\u4e00\u4e2a\u6210\u5458\u3002</p>"},{"location":"cs/pl/c_cpp/C/c/#io","title":"I/O\u4e0e\u6587\u4ef6","text":""},{"location":"cs/pl/c_cpp/C/c/#c","title":"C\u7684\u8f93\u5165\u8f93\u51fa\u6a21\u578b","text":""},{"location":"cs/pl/c_cpp/C/c/#_10","title":"\u7f13\u51b2","text":"<p>!!! info     \u5e7f\u4e49\u7684\u7f13\u51b2\u533a\u662f\u5185\u5b58\u7a7a\u95f4\u7684\u4e00\u90e8\u5206\uff0c\u5728\u5185\u5b58\u4e2d\u9884\u7559\u4e86\u4e00\u5b9a\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u7528\u6765\u6682\u65f6\u4fdd\u5b58\u8f93\u5165\u548c\u8f93\u51fa\u7b49 I/O \u64cd\u4f5c\u7684\u4e00\u4e9b\u6570\u636e\uff0c\u8fd9\u4e9b\u9884\u7559\u7684\u7a7a\u95f4\u5c31\u53eb\u505a\u7f13\u51b2\u533a\uff1b\u800c buffer \u7f13\u51b2\u533a\u548c Cache \u7f13\u5b58\u533a\u90fd\u5c5e\u4e8e\u7f13\u51b2\u533a\u7684\u4e00\u79cd\u3002     (buffer \u7f13\u51b2\u533a\u5b58\u50a8\u901f\u5ea6\u4e0d\u540c\u6b65\u7684\u8bbe\u5907\u6216\u8005\u4f18\u5148\u7ea7\u4e0d\u540c\u7684\u8bbe\u5907\u4e4b\u95f4\u7684\u4f20\u8f93\u6570\u636e\uff0c\u6bd4\u5982\u952e\u76d8\u3001\u9f20\u6807\u7b49\uff1b\u6b64\u5916\uff0cbuffer \u4e00\u822c\u662f\u7528\u5728\u5199\u5165\u78c1\u76d8\u7684\uff1b     Cache \u7f13\u5b58\u533a\u662f\u4f4d\u4e8e CPU \u548c\u4e3b\u5185\u5b58\u4e4b\u95f4\u7684\u5bb9\u91cf\u8f83\u5c0f\u4f46\u901f\u5ea6\u5f88\u5feb\u7684\u5b58\u50a8\u5668\uff0cCache \u4fdd\u5b58\u7740 CPU \u521a\u7528\u8fc7\u7684\u6570\u636e\u6216\u5faa\u73af\u4f7f\u7528\u7684\u6570\u636e\uff1bCache \u7f13\u5b58\u533a\u7684\u8fd0\u7528\u4e00\u822c\u662f\u5728 I/O \u7684\u8bf7\u6c42\u4e0a)</p> <ul> <li>\u5b8c\u5168\u7f13\u51b2\uff1a\u4ec5\u7f13\u51b2\u533a\u586b\u6ee1\u65f6\u5237\u65b0\u7f13\u51b2\u533a\uff08\u5c06\u5185\u5bb9\u53d1\u9001\u81f3\u76ee\u7684\u5730\uff09\uff0c\u901a\u5e38\u7528\u4e8e\u6587\u4ef6\u8f93\u5165\u3002\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u53d6\u51b3\u4e8e\u7cfb\u7edf\uff0c\u5e38\u89c1\u5927\u5c0f\u4e3a 512bits \u548c 4096bits\u3002</li> <li>\u884c\u7f13\u51b2\uff1a\u51fa\u73b0\u6362\u884c\u7b26\u65f6\u5237\u65b0\u7f13\u51b2\u533a\uff0c\u901a\u5e38\u7528\u4e8e\u952e\u76d8\u8f93\u5165\u3002\u6240\u4ee5\u5728\u6309\u4e0bEnter \u952e\u540e\u7a0b\u5e8f\u624d\u80fd\u4f7f\u7528\u7528\u6237\u8f93\u5165\u7684\u5b57\u7b26\u3002</li> <li><code>stdin,stdout,stderr</code> \u7684\u7f13\u51b2\u7c7b\u578b: Unix \u7ea6\u5b9a <code>stdin</code> \u4e0e <code>stdout</code> \u82e5\u4e0e\u7ec8\u7aef\u5173\u8054\u5219\u4e3a\u884c\u7f13\u51b2\uff0c\u800c <code>stderr</code> \u4e3a\u65e0\u7f13\u51b2(\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u5373\u523b\u88ab\u8bfb\u53d6\uff0c\u65e0\u6cd5\u4f7f\u7528\u9000\u683c\u7b49\u8fdb\u884c\u4fee\u6539) &gt; \u4e3a\u4ec0\u4e48\u9700\u8981\u7f13\u51b2\u533a\uff1a &gt; 1. \u7cfb\u7edf\u5c42\u9762\uff0c\u51cf\u5c11 CPU \u5bf9\u78c1\u76d8\u7684\u8bfb\u5199\u6b21\u6570\uff1aCPU \u8bfb\u53d6\u78c1\u76d8\u4e2d\u7684\u6570\u636e\u5e76\u4e0d\u662f\u76f4\u63a5\u8bfb\u53d6\u78c1\u76d8\uff0c\u800c\u662f\u5148\u5c06\u78c1\u76d8\u7684\u5185\u5bb9\u8bfb\u5165\u5230\u5185\u5b58\uff0c\u4e5f\u5c31\u662f Cache\uff0c\u7136\u540e CPU \u5bf9 Cache \u8fdb\u884c\u8bfb\u53d6\uff0c\u8fdb\u800c\u64cd\u4f5c\u6570\u636e\uff1b\u8ba1\u7b97\u673a\u5bf9 Cache \u7684\u64cd\u4f5c\u65f6\u95f4\u8fdc\u8fdc\u5c0f\u4e8e\u5bf9\u78c1\u76d8\u7684\u64cd\u4f5c\u65f6\u95f4\uff0c\u5927\u5927\u7684\u52a0\u5feb\u4e86\u8fd0\u884c\u901f\u5ea6\uff0c\u63d0\u9ad8 CPU \u7684\u4f7f\u7528\u6548\u7387\u3002 &gt; 2. \u5728 C \u8bed\u8a00\u8f93\u5165\u4e2d\uff0c\u628a\u82e5\u5e72\u5b57\u7b26\u4f5c\u4e3a\u4e00\u4e2a\u5757\u8fdb\u884c\u4f20\u8f93\u6bd4\u9010\u4e2a\u53d1\u9001\u8fd9\u4e9b\u5b57\u7b26\u8282\u7701\u65f6\u95f4\uff0c\u6253\u9519\u5b57\u7b26\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u952e\u76d8\u4fee\u6b63\u9519\u8bef\u3002 - C \u6807\u51c6\u89c4\u5b9a\uff1a\u8f93\u5165\u662f\u7f13\u51b2\u7684\u3002</li> </ul>"},{"location":"cs/pl/c_cpp/C/c/#_11","title":"\u6d41","text":"<ul> <li>\u6d41\u5c31\u662f\u4e00\u7cfb\u5217\u8fde\u7eed\u7684\u5b57\u8282\u3002 \u6253\u5f00\u6587\u4ef6\u7684\u8fc7\u7a0b\u5c31\u662f\u628a\u6d41\u4e0e\u6587\u4ef6\u76f8\u5173\u8054\uff0c\u8bfb\u5199\u90fd\u901a\u8fc7\u6d41\u6765\u5b8c\u6210\u3002</li> </ul>"},{"location":"cs/pl/c_cpp/C/c/#_12","title":"\u6807\u51c6\u6d41","text":"<pre><code>  #define stdin  /* \u7531\u5b9e\u73b0\u5b9a\u4e49 */\n  #define stdout /* \u7531\u5b9e\u73b0\u5b9a\u4e49 */\n  #define stderr /* \u7531\u5b9e\u73b0\u5b9a\u4e49 */\n</code></pre>"},{"location":"cs/pl/c_cpp/C/c/#_13","title":"\u5b57\u7b26\u8f93\u5165\u8f93\u51fa","text":""},{"location":"cs/pl/c_cpp/C/c/#_14","title":"\u91cd\u5b9a\u5411","text":"<ul> <li> <p>\u6539\u53d8\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u7684\u76ee\u7684\u5730</p> <p>\u5728\u00a0UNIX\u00a0\u7cfb\u7edf\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528<code>&gt;</code>\u548c<code>&lt;</code>\u6765\u91cd\u5b9a\u5411\u8f93\u5165\u8f93\u51fa\u3002</p> <p>\u4f8b\u5982\uff0c<code>ls &gt; ls.txt</code>\u00a0\u5c06<code>ls</code>\u7684\u8f93\u51fa\u91cd\u5b9a\u5411\u5230<code>ls.txt</code>\u6587\u4ef6\u4e2d\uff0c<code>cat &lt; ls.txt</code>\u5c06<code>ls.txt</code>\u6587\u4ef6\u7684\u5185\u5bb9\u8f93\u5165\u91cd\u5b9a\u5411\u5230cat\u547d\u4ee4\u4e2d\u3002 </p> <p>\u91cd\u5b9a\u5411\u7684\u76ee\u7684\u5730\u53ef\u4ee5\u662f\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u7a0b\u5e8f\u3002</p> <p>\u4f8b\u5982\uff0c<code>ls | cat</code>\u5c06<code>ls</code>\u7684\u8f93\u51fa\u91cd\u5b9a\u5411\u5230<code>cat</code>\u547d\u4ee4\u4e2d\u3002 </p> </li> </ul>"},{"location":"cs/pl/c_cpp/C/c/#_15","title":"\u65e0\u683c\u5f0f\u8f93\u5165/\u8f93\u51fa","text":"<ul> <li>\u7a84\u5b57\u7b26\u65e0\u683c\u5f0f\u8f93\u5165\u8f93\u51fa\u51fd\u6570\uff0c\u5b9a\u4e49\u4e8e\u00a0<code>&lt;stdio.h&gt;</code>\u00a0\u5934\u6587\u4ef6\u4e2d\uff1a</li> </ul> \u529f\u80fd \u51fd\u6570 \u5931\u8d25\u8fd4\u56de\u503c <code>int getchar(void)</code> <code>int getc(FILE *stream)</code> <code>int fgetc(FILE *stream)</code> \u5355\u5b57\u7b26\u8f93\u5165 EOF <code>char *fgets(char *s, int size, FILE *stream)</code> <code>char *gets_s( char *str, rsize_t n)</code> \u5b57\u7b26\u4e32\u8f93\u5165 NULL <code>int ungetc(int c, FILE *stream)</code> \u653e\u56de\u6587\u4ef6\u6d41 EOF <code>int putchar(int c)</code> <code>int putc(int c, FILE *stream)</code> <code>int fputc(int c, FILE *stream)</code> \u5355\u5b57\u7b26\u8f93\u51fa EOF <code>int puts(const char *s)</code> <code>int fputs(const char *s, FILE *stream)</code> \u5b57\u7b26\u4e32\u8f93\u51fa EOF <ul> <li>\u4ee5\u4e0a\u51fd\u6570\u90fd\u5c06\u5b57\u7b26\u4ece\u7f13\u51b2\u533a\u4e2d\u7684\u00a0<code>unsigned char</code>\u00a0\u7c7b\u578b\u8f6c\u6362\u4e3a\u00a0<code>int</code>\u00a0\u7c7b\u578b\u3002</li> </ul>"},{"location":"cs/pl/c_cpp/C/c/#_16","title":"\u683c\u5f0f\u5316\u8f93\u5165/\u8f93\u51fa","text":""},{"location":"cs/pl/c_cpp/C/c/#scanf","title":"scanf","text":"<ul> <li>\u5e38\u7528<code>scanf(\"%[^\\n]\",s)</code>\u4ee5\u8bfb\u53d6\u542b\u7a7a\u683c\u5b57\u7b26\u4e32 \u4f46\u540c\u65f6\u8981\u6ce8\u610f\uff0c\u7d27\u63a5\u7740\u8bfb\u53d6<code>%c</code>\u4f1a\u8bfb\u53d6\u5230<code>\\n</code>\uff01\uff01\uff01</li> </ul>"},{"location":"cs/pl/c_cpp/C/c/#printf","title":"printf","text":"<p><code>printf(%[flags][width][.prec][hIL]type)</code></p> char meaning <code>-</code> \u5de6\u5bf9\u9f50\uff08\u53f3\u4fa7\u586b\u5145\u7a7a\u767d\uff09 <code>+</code> \u603b\u662f\u6253\u5370\u7b26\u53f7\uff08\u5305\u62ec\u6b63\u53f7\uff09 `` \u5982\u679c\u65e0\u7b26\u53f7\uff0c\u6253\u5370\u7a7a\u683c <code>0</code> \u7528\u00a00\u00a0\u586b\u5145 width/.prec meaning number. \u603b\u548c\u7684\u6700\u5c0f\u5b57\u7b26\u6570 * \u4ee5\u4e00\u4e2a\u989d\u5916\u7684int\u7c7b\u578b\u53d8\u91cf\u6307\u5b9a\u5bbd\u5ea6 .number \u5c0f\u6570\u70b9\u540e\u4f4d\u6570 .* \u540c\u7406,\u4f46\u662f\u6307\u5b9a\u5c0f\u6570\u70b9\u4f4d\u6570 <p></p>"},{"location":"cs/pl/c_cpp/C/c/#_17","title":"\u6587\u4ef6\u7f16\u7801\u4e0e\u6587\u4ef6\u8f93\u5165\u8f93\u51fa","text":"<ul> <li>\u5b9a\u4e49\uff1a \u7b80\u5355\u7684\u8bf4\uff0c\u6587\u4ef6\u662f\u5728\u786c\u76d8\u4e0a\u7684\u4e00\u6bb5\u5df2\u547d\u540d\u7684\u50a8\u5b58\u533a\u3002 \u5bf9\u64cd\u4f5c\u7cfb\u7edf\u800c\u8a00\uff0c\u6587\u4ef6\u66f4\u52a0\u590d\u6742\u3002\u6587\u4ef6\u662f\u5177\u6709\u7b26\u53f7\u540d\u7684\uff0c\u5728\u903b\u8f91\u4e0a\u5177\u6709\u5b8c\u6574\u610f\u4e49\u7684\u4e00\u7ec4\u76f8\u5173\u4fe1\u606f\u9879\u7684\u5e8f\u5217\u3002\u6587\u4ef6\u8fd8\u5305\u62ec\u4e86\u4e00\u4e9b\u989d\u5916\u6570\u636e\uff0c\u4fbf\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u786e\u5b9a\u6587\u4ef6\u7684\u79cd\u7c7b\u3002 \u5bf9\u4e8e\u00a0C\u00a0\u8bed\u8a00\u6765\u8bf4\uff0cC\u00a0\u628a\u6587\u4ef6\u770b\u4f5c\u8fde\u7eed\u7684\u5b57\u8282\uff0c\u6bcf\u4e2a\u5b57\u8282\u90fd\u80fd\u88ab\u5355\u72ec\u8bfb\u53d6\u3002\u8fd9\u4e0e\u00a0UNIX\u00a0\u73af\u5883\u4e2d\u7684\u6587\u4ef6\u7ed3\u6784\u76f8\u5bf9\u5e94\u3002\u4fbf\u4e8e\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\uff0cC\u00a0\u63d0\u4f9b\u4e24\u79cd\u6587\u4ef6\u6a21\u5f0f\uff1a\u6587\u672c\u6a21\u5f0f\u548c\u4e8c\u8fdb\u5236\u6a21\u5f0f\u3002  </li> <li>\u7f13\u51b2\u6587\u4ef6\u7cfb\u7edf<ul> <li>\u8f93\u51fa\u6570\u636e\uff1a \u6570\u636e\u2014&gt;\u7f13\u51b2\u533a\uff0c\u88c5\u6ee1\u7f13\u51b2\u533a\u540e\u2014&gt;\u78c1\u76d8\u6587\u4ef6 \u8bfb\u5165\u6570\u636e\uff1a \u5148\u4e00\u6b21\u6027\u4ece\u78c1\u76d8\u6587\u4ef6\u5c06\u4e00\u6279\u6570\u636e\u8f93\u5165\u5230\u7f13\u51b2\u533a\uff0c\u7136\u540e\u518d\u4ece\u7f13\u51b2\u533a\u9010\u4e2a\u8bfb\u5165\u6570\u636e</li> </ul> </li> <li> <p>\u7c7b\u578b\u4e0e\u5b8f FILE</p> <p><code>c FILE*(const char *restrict path,const char *restrict mode); int fclose(FILE* stream); fscanf(FILE*,...); fprintf(FILE*,...);</code></p> </li> </ul>"},{"location":"cs/pl/c_cpp/C/c/#_18","title":"\u51fd\u6570","text":"<ul> <li><code>FILE *fopen(const char *filename, const char *mode)</code> <ul> <li> <p>\u6253\u5f00\u6587\u4ef6\uff0c\u8fd4\u56de\u6587\u4ef6\u6d41\u6307\u9488\u3002 \u6253\u5f00\u5931\u8d25\uff0c\u8fd4\u56de<code>NULL</code></p> r \u6253\u5f00\u53ea\u8bfb(\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u51fa\u9519) r+ \u6253\u5f00\u8bfb\u5199\uff0c\u4ece\u6587\u4ef6\u5934\u5f00\u59cb w \u6253\u5f00\u53ea\u5199\u3002\u5982\u679c\u4e0d\u5b58\u5728\u5219\u65b0\u5efa\uff0c\u5982\u679c\u5b58\u5728\u5219\u6e05\u7a7a\uff08\u4f1a\u6e05\u7a7a\u539f\u6587\u4ef6\uff09 w+ \u6253\u5f00\u8bfb\u5199\u3002\u5982\u679c\u4e0d\u5b58\u5728\u5219\u65b0\u5efa\uff0c\u5982\u679c\u5b58\u5728\u5219\u6e05\u7a7a a \u6253\u5f00\u8ffd\u52a0\u3002\u5982\u679c\u4e0d\u5b58\u5728\u5219\u65b0\u5efa\uff0c\u5982\u679c\u5b58\u5728\u5219\u4ece\u6587\u4ef6\u5c3e\u5f00\u59cb ..x \u53ea\u65b0\u5efa\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u4e0d\u80fd\u6253\u5f00 </li> </ul> </li> </ul> <ul> <li><code>int fclose(FILE *stream)</code><ul> <li>\u5173\u95ed\u6587\u4ef6\uff0c\u6e05\u7a7a\u6d41\uff08\u6e05\u7a7a\u6d41\u5c31\u662f\u4f20\u9012\u7f13\u51b2\u6570\u636e\uff0c\u5c06\u7f13\u51b2\u533a\u6570\u636e\u5199\u5165\u78c1\u76d8\u6247\u533a\uff09\uff0c\u91ca\u653e\u7f13\u51b2\u548cFILE\u7ed3\u6784\u4f53 \u8fd4\u56de0\uff1a\u6b63\u5e38\u5173\u95ed \uff1b\u975e0\uff1a\u65e0\u6cd5\u6b63\u5e38\u5173\u95ed</li> </ul> </li> </ul> <ul> <li> <p><code>int feof(FILE *stream)</code> </p> <p>\u68c0\u6d4b\u6587\u4ef6\u6d41\u662f\u5426\u5230\u672b\u5c3e\uff1a \u672a\u5230\u8fbe\u5219\u8fd4\u56de 0 \uff1b\u5230\u8fbe\u5219\u8fd4\u56de\u975e 0 \u503c</p> </li> </ul> <ul> <li><code>void rewind (FILE *stream)</code> \u5c06\u6587\u4ef6\u6307\u9488\u6307\u5411\u8bfb\u5199\u6587\u4ef6\u7684\u9996\u5730\u5740\uff0c\u5373\u6253\u5f00\u6587\u4ef6\u65f6\u6307\u9488\u6240\u6307\u5411\u7684\u4f4d\u7f6e</li> </ul> <ul> <li> <p><code>int fseek(FILE *stream,long offset,int orgin)</code> </p> <ul> <li>offset:\u79fb\u52a8\u504f\u79fb\u91cf\uff0clong\u578b</li> <li> <p>origin\uff1a</p> \u6587\u4ef6\u9996\u90e8 0 SEEK_SET \u5f53\u524d\u4f4d\u7f6e 1 SEEK_CUR \u6587\u4ef6\u5c3e\u90e8 2 SEEK_END - \u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5426\u5219\u975e0 </li> </ul> </li> <li> <p><code>long ftell(FILE *stream)</code> \u8fd4\u56de\u5f53\u524d\u6587\u4ef6\u6307\u9488\u7684\u4f4d\u7f6e\uff0c\u5373\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5f00\u5934\u7684\u4f4d\u79fb\u91cf\uff08\u5b57\u8282\u6570\uff09 \u51fa\u9519\u65f6\u8fd4\u56de -1L</p> </li> </ul> <ul> <li><code>int ferror(FILE *stream)</code> \u68c0\u6d4b\u7ed9\u5b9a\u6d41\u662f\u5426\u5b58\u5728\u9519\u8bef \u53d1\u751f\u9519\u8bef\u65f6\u8fd4\u56de\u975e0\uff1b\u5426\u5219\u4e3a0</li> </ul>"},{"location":"cs/pl/c_cpp/C/c/#_19","title":"\u5e38\u7528\u8bfb\u5199\u51fd\u6570","text":"<p>=== \"\u5b57\u7b26\u8bfb\u5199\u51fd\u6570\"     <code>int fgetc(FILE *stream)</code> </p> <pre><code>**\u5c06\u83b7\u53d6\u7684`unsigned char`\u8f6c\u6362\u4e3a`int`\u8fd4\u56de\n\u5931\u8d25\u65f6\u8fd4\u56de`EOF`**\n\n-----\n\n**`int fputc(int ch,FILE *stream)`  \n\u5c06\u83b7\u53d6\u7684\u5b57\u7b26`ch`\uff0c\u5199\u5165\u5230`fp`\u6307\u793a\u7684\u78c1\u76d8\u7a7a\u95f4\n\u6210\u529f\u65f6\u8fd4\u56de`ch`\uff1b\u5931\u8d25\u65f6\u8fd4\u56de`EOF`**\n</code></pre> <p>=== \"\u5b57\u7b26\u4e32\u8bfb\u5199\u51fd\u6570\"     <code>char *fgets(char *str,int count,FILE *stream)</code> </p> <pre><code>**\u6700\u591a\u8bfb\u53d6  *n-1*  \u4e2a\u5b57\u7b26\uff0c\u5e76\u5c06\u8bfb\u5165\u7684\u5b57\u7b26\u4e32\u5b58\u5165s\u6240\u6307\u5185\u5b58\u5730\u5740\u5f00\u59cb\u7684n-1\u7684\u8fde\u7eed\u7684\u5185\u5b58\u5355\u5143  \n\u5230\u8fbe\u6307\u5b9a\u5b57\u7b26\u6570 \u6216 \u63a5\u6536\u5230\u6362\u884c\u7b26 \u6216\u63a5\u6536\u5230EOF\u65f6\u81ea\u52a8\u5728\u672b\u5c3e\u6dfb\u52a0 \u2019\\0\u2019 (\u4f1a\u4fdd\u7559\u6362\u884c\u7b26)  \n\u6210\u529f\u6267\u884c\uff1a\u8fd4\u56de `*str` ;\u5426\u5219\u8fd4\u56de`NULL`**\n\n---\n\n**`int fputs(const char *str,FILE *stream)`  \n\u7ed3\u675f\u7b26 \u2019\\0\u2019 \u4e0d\u4f1a\u5199\u5165\u6587\u4ef6\n\u6267\u884c\u6210\u529f\u8fd4\u56de\u6700\u540e\u5199\u7684\u4e00\u4e2a\u5b57\u7b26\uff1b\u5931\u8d25\u8fd4\u56de EOF**\n</code></pre> <p>=== \"\u6570\u636e\u5757\u8bfb\u5199\u51fd\u6570\"     <code>size_t fread(void *buffer,size_t size,size_t count,FILE *stream)</code></p> <pre><code>- **buffer :\u5b58\u50a8\u8bfb\u53d6\u5bf9\u8c61\u7684\u6307\u9488**\n- **size :\u6bcf\u4e2a\u5bf9\u8c61\u7684\u5927\u5c0f**\n- **count :\u8981\u8bfb\u53d6\u7684\u5bf9\u8c61\u6570**\n- **\u8fd4\u56de\u503c\uff1a\u6210\u529f\u8bfb\u53d6\u7684\u5bf9\u8c61\u6570**\uff1b\u5982\u679c `size` \u6216 `count`\u4e3a0\uff0c\u5219\u8fd4\u56de0\u4e14\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\n\n---\n\n**`size_t fwrite(void *buffer,size_t size,size_t count,FILE *stream)`**\n</code></pre>"},{"location":"cs/pl/c_cpp/C/c/#_20","title":"\u5176\u4ed6","text":"<ul> <li><code>int fflush(FILE *stream)</code><ul> <li>\u7acb\u5373\u5199\u5165\uff08\u8981\u6c42\u4e0a\u4e00\u6b21\u64cd\u4f5c\u662f\u8f93\u51fa\uff09\u3002</li> </ul> </li> <li><code>FILE *freopen(const char *filename, const char *mode, FILE *stream)</code></li> <li><code>void setbuf(FILE *stream, char *buf)</code><ul> <li>\u5b9a\u4e49\u6d41\u00a0stream\u00a0\u5e94\u5982\u4f55\u7f13\u51b2\u3002\u8be5\u51fd\u6570\u5e94\u5728\u4e0e\u6d41\u00a0stream\u00a0\u76f8\u5173\u7684\u6587\u4ef6\u88ab\u6253\u5f00\u65f6\uff0c\u4e14\u8fd8\u672a\u53d1\u751f\u4efb\u4f55\u8f93\u5165\u6216\u8f93\u51fa\u64cd\u4f5c\u4e4b\u524d\u88ab\u8c03\u7528\u4e00\u6b21</li> </ul> </li> <li><code>int setvbuf(FILE *stream, char *buf, int mode, size_t size)</code><ul> <li>\u521b\u5efa\u4f9b\u6807\u51c6\u00a0I/O\u00a0\u51fd\u6570\u66ff\u6362\u4f7f\u7528\u7684\u7f13\u51b2\u533a</li> </ul> </li> </ul>"},{"location":"cs/pl/c_cpp/C/c/#_21","title":"\u6253\u5f00\u6587\u4ef6\u7684\u6807\u51c6\u64cd\u4f5c","text":"<ul> <li>\u6ce8\u610fFILE\u6307\u9488\u662f\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff0c\u8fd4\u56de\u7684\u662f\u6210\u529f\u8bfb\u5199\u7684\u5b57\u8282\u6570 === \"\u6587\u672c\u6587\u4ef6\"     <code>c     FILE* fp=fopen(\"file\",\"r\");     if (fp){         fscanf(fp,...); //\u7b2c\u4e00\u9879FILE *,\u540e\u9762\u548cscanf\u7528\u6cd5\u4e00\u6837         fclose(fp);     }     else{         ...     }     exit(0)//\u5173\u95ed\u6240\u6709\u6253\u5f00\u7684\u6587\u4ef6\u5e76\u7ec8\u6b62\u7a0b\u5e8f\u8fdb\u884c\uff0c\u53c2\u65700\u8868\u793a\u6b63\u5e38\u7ed3\u675f\uff0c\u975e0\u53c2\u6570\u8868\u793a\u4e0d\u6b63\u5e38\u7ed3\u675f</code></li> </ul> <p>=== \"\u4e8c\u8fdb\u5236\u6587\u4ef6\"     <code>c     size_t fread(void *restrict ptr,size_t size,size_t nitems,FILE *restrict stream);     size_t fwrite(const void *restrict ptr,size_t size,size_t nitems,FILE *restrict stream);</code></p>"},{"location":"cs/pl/c_cpp/C/c/#_22","title":"\u5934\u6587\u4ef6","text":"<ol> <li> <p>\u58f0\u660e extern \u5168\u5c40\u53d8\u91cf\uff0c\u51fd\u6570\u539f\u578b</p> <p><code>c title=\"max.h\" int max(int a,int b); extern int allvalue;</code></p> <ul> <li> <p>\u6709\u5173\u58f0\u660e\u548c\u5b9a\u4e49</p> <p>1.\u53d8\u91cf\u7684\u5b9a\u4e49\uff1a\u53d8\u91cf\u7684\u5b9a\u4e49\u7528\u4e8e\u4e3a\u53d8\u91cf\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u8fd8\u53ef\u4ee5\u4e3a\u53d8\u91cf\u6307\u5b9a\u521d\u59cb\u503c\u3002\u5728\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u53d8\u91cf\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u5b9a\u4e49\u3002</p> <p>2.\u53d8\u91cf\u7684\u58f0\u660e\uff1a\u7528\u4e8e\u5411\u7a0b\u5e8f\u8868\u660e\u53d8\u91cf\u7684\u7c7b\u578b\u548c\u540d\u5b57\u3002\u7a0b\u5e8f\u4e2d\u53d8\u91cf\u53ef\u4ee5\u58f0\u660e\u591a\u6b21\uff0c\u4f46\u53ea\u80fd\u5b9a\u4e49\u4e00\u6b21\u3002</p> <p>extern int i\uff1b//\u58f0\u660e\u4f46\u4e0d\u5b9a\u4e49</p> <p>int i;//\u58f0\u660e\u4e5f\u5b9a\u4e49</p> <p>extern\u58f0\u660e\u4e0d\u662f\u5b9a\u4e49\uff0c\u4e5f\u4e0d\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u53ea\u662f\u8bf4\u660e\u53d8\u91cf\u5b9a\u4e49\u5728\u7a0b\u5e8f\u7684\u5176\u4ed6\u5730\u65b9\u3002</p> <p>\u6ce8\u610f\uff1a\u5982\u679c\u58f0\u660e\u6709\u521d\u59cb\u5316\u5f0f\uff0c\u90a3\u4e48\u5b83\u53ef\u88ab\u5f53\u4f5c\u662f\u5b9a\u4e49\uff0c\u6b64\u65f6\u58f0\u660e\u4e5f\u662f\u5b9a\u4e49\u4e86\uff0c\u5373\u4f7f\u58f0\u660e\u6807\u8bb0\u4e3aextern</p> </li> </ul> </li> <li> <p>\u6807\u51c6\u5934\u6587\u4ef6\u7ed3\u6784</p> <p>```c</p> </li> </ol>"},{"location":"cs/pl/c_cpp/C/c/#ifndef-list_head","title":"ifndef LIST_HEAD","text":""},{"location":"cs/pl/c_cpp/C/c/#define-list_head","title":"define LIST_HEAD","text":"<p>typedef struct node{     int value;     struct node* next; }node;</p>"},{"location":"cs/pl/c_cpp/C/c/#endif","title":"endif","text":"<p>```</p>"},{"location":"cs/pl/c_cpp/C/c/#c_1","title":"\u7b80\u8981C\u6807\u51c6\u5e93","text":""},{"location":"cs/pl/c_cpp/C/c/#ctype","title":"c.type","text":"<ul> <li>\u7528\u6765\u786e\u5b9a\u5305\u542b\u4e8e\u5b57\u7b26\u6570\u636e\u4e2d\u7684\u7c7b\u578b\u7684\u51fd\u6570</li> </ul> \u5b57\u7b26\u5206\u7c7b \u529f\u80fd \u5728\u6807\u5934\u00a0<code>&lt;ctype.h&gt;</code>\u00a0\u5b9a\u4e49 <code>isalnum</code> \u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u662f\u5b57\u6bcd\u6216\u6570\u5b57(\u51fd\u6570) <code>isalpha</code> \u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u662f\u5b57\u6bcd(\u51fd\u6570) <code>islower</code> \u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u662f\u5c0f\u5199\u5b57\u6bcd(\u51fd\u6570) <code>isupper</code> \u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u662f\u5927\u5199\u5b57\u6bcd(\u51fd\u6570) <code>isdigit</code> \u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u6570\u5b57(\u51fd\u6570) <code>isxdigit</code> \u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u662f\u5341\u516d\u8fdb\u5236\u7684\u5b57\u7b26(\u51fd\u6570) <code>iscntrl</code> \u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u662f\u63a7\u5236\u5b57\u7b26(\u51fd\u6570) <code>isgraph</code> \u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u662f\u56fe\u5f62\u5b57\u7b26(\u51fd\u6570) <code>isspace</code> \u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u662f\u7a7a\u767d\u5b57\u7b26(\u51fd\u6570) <code>isblank</code>(C99) \u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u662f\u7a7a\u683c\u5b57\u7b26(\u51fd\u6570) <code>isprint</code> \u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u662f\u53ef\u6253\u5370\u5b57\u7b26(\u51fd\u6570) <code>ispunct</code> \u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u662f\u6807\u70b9\u5b57\u7b26(\u51fd\u6570) \u5b57\u7b26\u64cd\u4f5c <code>tolower</code> \u5c06\u5b57\u7b26\u8f6c\u6362\u6210\u5c0f\u5199(\u51fd\u6570) <code>toupper</code> \u5c06\u5b57\u7b26\u8f6c\u6362\u6210\u5927\u5199 <p>!!! note \"\u533a\u522b <code>isblank</code> \u548c <code>isspace</code>\"</p> <pre><code>**\u7a7a\u683c**\u5b57\u7b26\uff1a`isblank`\u00a0\u4ec5\u5224\u65ad\u7a7a\u683c\u00a0\u548c\u6c34\u5e73\u5236\u8868\u7b26\u00a0`\\t`\u3002\n\n**\u7a7a\u767d**\u5b57\u7b26\uff1a`isspace`\u00a0\u5224\u65ad\u7a7a\u683c\u00a0\u3001\u6c34\u5e73\u5236\u8868\u7b26\u00a0`\\t`\u3001\u6362\u884c\u7b26\u00a0`\\n`\u3001\u56de\u8f66\u7b26\u00a0`\\r`\u3001\u6362\u9875\u7b26\u00a0`\\f`\u3001\u5782\u76f4\u5236\u8868\u7b26\u00a0`\\v`\u3002\n</code></pre>"},{"location":"cs/pl/c_cpp/C/c/#mathh","title":"math.h","text":"<p><code>c title=\"\u5e38\u7528\u51fd\u6570\" double acos(double x); double asin(double x); double atan(double x); double cos(double x); double sin(double x); double tan(double x); double exp(double x); double log(double x); double log10(double x); double pow(double x, double y); double sqrt(double x); double ceil(double x); double floor(double x); double fabs(double x);</code></p> <ul> <li>\u8f93\u5165\u8f93\u51fa\u5168\u90fd\u662f\u00a0<code>double</code>\u00a0\u7c7b\u578b\uff08\u6ce8\u610f\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u5e26\u6765\u7684\u5f71\u54cd\uff09\u3002  </li> <li>\u4e09\u89d2\u51fd\u6570\u5747\u4e3a\u5f27\u5ea6\u5236\u3002  </li> <li>\u6ca1\u6709\u00a0<code>PI</code>\u00a0\u8fd9\u4e2a\u5b8f\u3002  <ul> <li>\u53ef\u4ee5\u4f7f\u7528\u00a0<code>atan(1)*4</code>\u00a0\u4ee3\u66ff\u3002  </li> <li>GCC\u00a0\u5b9a\u4e49\u4e86\u4e00\u4e9b\u6570\u503c\u5b8f\uff0c\u5b83\u4eec\u90fd\u4ee5\u00a0<code>M_</code>\u00a0\u5f00\u5934\uff0c\u6bd4\u5982\u00a0<code>M_PI</code>\u3002\u5b83\u4eec\u9ed8\u8ba4\u4e3a\u00a0<code>double</code>\u00a0\u7c7b\u578b\u3002\u5982\u679c\u4f60\u9700\u8981\u5176\u4ed6\u7cbe\u5ea6\uff0c\u53ef\u4ee5\u6dfb\u52a0\u00a0<code>l</code>\u00a0\u540e\u7f00\uff0c\u6bd4\u5982\u00a0<code>M_PIl</code>\u3002  </li> </ul> </li> </ul>"},{"location":"cs/pl/c_cpp/C/c/#stringh","title":"string.h","text":"<ul> <li> <p>\u7c7b\u578b</p> <p><code>size_t</code></p> </li> <li> <p>\u5b8f</p> <p><code>NULL</code></p> </li> <li> <p>\u51fd\u6570</p> <ul> <li> <p>\u590d\u5236\u51fd\u6570</p> <p><code>c void *memcpy(void *dest, const void *src, size_t n); void *memmove(void *dest, const void *src, size_t n); char *strcpy(char *dest, const char *src); char *strncpy(char *dest, const char *src, size_t n);</code></p> </li> <li> <p>\u8fde\u63a5\u51fd\u6570</p> <p><code>c char *strcat(char *dest, const char *src); char *strncat(char *dest, const char *src, size_t n);</code></p> </li> <li> <p>\u6bd4\u8f83\u51fd\u6570</p> <p><code>c int memcmp(const void *s1, const void *s2, size_t n); int strcmp(const char *s1, const char *s2); int strncmp(const char *s1, const char *s2, size_t n);</code></p> </li> <li> <p>\u67e5\u627e\u51fd\u6570</p> <p><code>c void *memchr(const void *s, int c, size_t n); char *strchr(const char *s, int c); // size_t strcspn(const char *s1, const char *s2); // char *strpbrk(const char *s1, const char *s2); // char *strrchr(const char *s, int c); // size_t strspn(const char *s1, const char *s2); char *strstr(const char *s1, const char *s2); // char *strtok(char *s1, const char *s2);</code></p> </li> <li> <p>\u5176\u4ed6\u51fd\u6570</p> <p><code>c void *memset(void *s, int c, size_t n); // char *strerror(int errnum); size_t strlen(const char *s);</code></p> </li> </ul> <p>\u4f7f\u7528\u524d\uff0c\u81ea\u5df1\u8ba1\u7b97\u5b57\u7b26\u4e32\u957f\u5ea6\u548c\u5269\u4f59\u7a7a\u95f4\uff0c\u8fd9\u662f\u7f16\u7a0b\u8005\u7684\u8d23\u4efb\u3002\u6216\u8005\u4f7f\u7528\u5e26\u00a0<code>n</code>\u00a0\u7684\u51fd\u6570\u3002</p> <p>\u6709\u4e9b\u51fd\u6570\u53ef\u80fd\u8fd4\u56de\u7a7a\u6307\u9488\uff0c\u8bb0\u5f97\u6d4b\u8bd5\u8fd4\u56de\u7684\u6307\u9488\u3002</p> </li> </ul>"},{"location":"cs/pl/c_cpp/C/c/#stdlibh","title":"stdlib.h","text":"<ul> <li>\u5b8f <code>RAND_MAX</code> <code>EXIT_FAILURE</code> <code>EXIT_SUCCESS</code></li> </ul>"},{"location":"cs/pl/c_cpp/C/c/#_23","title":"\u51fd\u6570","text":"<ul> <li> <p>\u4f2a\u968f\u673a\u5e8f\u5217\u4ea7\u751f\u51fd\u6570</p> <p><code>c int rand(void); void srand(unsigned int seed);</code></p> </li> <li> <p>\u6574\u6570\u7b97\u672f\u51fd\u6570</p> <p><code>c int abs(int n); div_t div(int numer, int denom); long labs(long n); ldiv_t ldiv(long numer, long denom);</code></p> </li> <li> <p>\u67e5\u627e\u548c\u6392\u5e8f\u51fd\u6570</p> <p><code>c void *bsearch(const void *key, const void *base, size_t n, size_t size, int (*compar)(const void *, const void *)); void qsort(void *base, size_t n, size_t size, int (*compar)(const void *, const void *));</code></p> </li> <li> <p>\u6587\u672c\u8f6c\u6362\uff08\u597d\u7528\u7684\uff09</p> <p><code>c double atof(const char *str); int atoi(const char *str); //\u8fd4\u56de\u5b57\u7b26\u4e32\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u6574\u6570 long atol(const char *str); double strtod(const char *str, char **endptr); long strtol(const char *str, char **endptr, int base); //\u6307\u5b9a\u8d77\u672b\u548c\u8fdb\u5236 unsigned long strtoul(const char *str, char **endptr, int base);</code></p> </li> <li> <p>\u5185\u5b58\u7ba1\u7406\uff08\u91cd\u96be\u70b9\uff09</p> <p><code>c void *calloc(size_t nobj, size_t size); void free(void *ptr); void *malloc(size_t size); void *realloc(void *ptr, size_t size);</code></p> </li> </ul>"},{"location":"cs/pl/c_cpp/C/c/#_24","title":"\u51fd\u6570\u7684\u4f7f\u7528","text":"<p>!!! note \"<code>qsort</code>\u00a0\u7684\u7528\u4f8b\uff1a\"</p> <pre><code>```c\nint cmpfunc (const void * a, const void * b) {\n    return ( *(int*)a - *(int*)b );\n}\nqsort(values, 5, sizeof(int), cmpfunc);\n```\n</code></pre>"},{"location":"cs/pl/c_cpp/C/c/#stdioh","title":"stdio.h","text":"<ul> <li> <p>\u7c7b\u578b</p> <p><code>c size_t FILE fpos_t</code></p> </li> <li> <p>\u5b8f</p> <p><code>c stderr stdin stdout NULL EOF SEEK_CUR SEEK_END SEEK_SET // BUFSIZ // FOPEN_MAX // FILENAME_MAX</code></p> </li> <li> <p>\u51fd\u6570</p> <ul> <li> <p>\u6587\u4ef6\u64cd\u4f5c\u51fd\u6570\uff08\u4e0d\u505a\u8981\u6c42\uff09</p> <p><code>c // int remove(const char *filename); // int rename(const char *old, const char *new); // FILE *tmpfile(void);</code></p> </li> <li> <p>\u6587\u4ef6\u8bbf\u95ee\u51fd\u6570</p> <p><code>c int fclose(FILE *stream); // int fflush(FILE *stream); FILE *fopen(const char *filename, const char *mode); FILE *freopen(const char *filename, const char *mode, FILE *stream); // void setbuf(FILE *stream, char *buf); // int setvbuf(FILE *stream, char *buf, int mode, size_t size);</code></p> </li> <li> <p>\u683c\u5f0f\u5316\u7684\u8f93\u5165\u8f93\u51fa\u51fd\u6570</p> <p><code>c int fprintf(FILE *stream, const char *format, ...); int fscanf(FILE *stream, const char *format, ...); int printf(const char *format, ...); int scanf(const char *format, ...); int sprintf(char *str, const char *format, ...); int sscanf(const char *str, const char *format, ...); // int vfprintf(FILE *stream, const char *format, va_list arg);</code></p> </li> <li> <p>\u5b57\u7b26\u8f93\u5165\u8f93\u51fa\u51fd\u6570</p> <p><code>c // int fgetc(FILE *stream); // char *fgets(char *str, int n, FILE *stream); // int fputc(int c, FILE *stream); int fputs(const char *str, FILE *stream); // int getc(FILE *stream); int getchar(void); // char *gets(char *str); // int putc(int c, FILE *stream); int putchar(int c); int puts(const char *str); // int ungetc(int c, FILE *stream);</code></p> </li> <li> <p>\u76f4\u63a5\u8f93\u5165\u8f93\u51fa\u51fd\u6570\uff08\u8003\u8bd5\u4e0d\u7ba1\uff09</p> <p><code>c size_t fread(void *ptr, size_t size, size_t nobj, FILE *stream); size_t fwrite(const void *ptr, size_t size, size_t nobj, FILE *stream);</code></p> </li> <li> <p>\u6587\u4ef6\u5b9a\u4f4d\u51fd\u6570\uff08\u8003\u8bd5\u4e0d\u7ba1\uff09</p> <p><code>c //int fgetpos(FILE *stream, fpos_t *pos); int fseek(FILE *stream, long offset, int origin); //int fsetpos(FILE *stream, const fpos_t *pos); long ftell(FILE *stream); void rewind(FILE *stream);</code></p> </li> <li> <p>\u9519\u8bef\u5904\u7406\u51fd\u6570\uff08\u4e0d\u505a\u8981\u6c42\uff09</p> <p><code>c // void clearerr(FILE *stream); // int feof(FILE *stream); // int ferror(FILE *stream); // void perror(const char *str);</code></p> </li> </ul> </li> </ul>"},{"location":"cs/pl/c_cpp/C/c/#_25","title":"\u6613\u9519","text":"<ul> <li> <p><code>sizeof</code>\u662f\u8fd0\u7b97\u7b26\uff08\u8868\u8fbe\u5f0f\uff09 \u4e14\u4e3a\u9759\u6001</p> <p><code>c sizeof(type)sizeof expression sizeof(a++)  //a\u503c\u4e0d\u53d8,\u7f16\u8bd1\u65f6\u5224\u65ad\u4e86\u7c7b\u578b\u5c31\u66ff\u6362\u4e86a++\uff0c\u5e76\u6ca1\u6709\u5b9e\u9645\u6267\u884c\u4efb\u4f55\u7684\u8ba1\u7b97</code></p> </li> <li> <p><code>scanf</code>: <code>%c</code>\u8981\u8bfb<code>\u2019 \u2019</code>\u548c<code>\u2019\\n\u2019</code></p> <p>```c   int a;   char c1, c2;   char s[7];   scanf(\"%d%c %c%s\\n\", &amp;a, &amp;c1, &amp;c2, s);   printf(\"%d#%c#%c#%s\", a, c1, c2, s);</p> <p>#input: there is no space after the la   st character   20231127   ckc-agc   daily_problem</p> <p>/output:   20231127#   #c#kc-agc / ```</p> </li> <li> <p>\u51fd\u6570\u4e2d\u7684<code>malloc</code>:</p> <p>```c</p>"},{"location":"cs/pl/c_cpp/C/c/#include","title":"include","text":""},{"location":"cs/pl/c_cpp/C/c/#include_1","title":"include","text":""},{"location":"cs/pl/c_cpp/C/c/#include_2","title":"include  <p>void my_strcat(char s1, char s2, char *s3) {   size_t len1 = strlen(s1);   size_t len2 = strlen(s2);   s3 = malloc(len1 + len2 + 1);   memcpy(s3, s1, len1);   memcpy(s3 + len1, s2, len2);   s3[len1 + len2] = 0;   printf(\"%s\\n\", s3);  }</p> <p>int main() {   char s1[] = \"I love \";   char s2[] = \"cats!\";   char s3[] = \"\";   my_strcat(s1, s2, s3);   printf(\"%s\\n\", s3);   } //\u7ed3\u679c\uff1aI love cats!\\n\\n</p> <p><code>`` !!! note \"\u89e3\u91ca\"     - \u8be5\u51fd\u6570</code>my_strcat<code>\u5e94\u8be5\u5c06\u7ed3\u679c\u8fde\u63a5 s1 \u5e76 s2 \u5b58\u50a8\u5728 s3 \u4e2d\u3002\u4f46\u662f\uff0c\u8be5\u51fd\u6570\u65e0\u6cd5\u6309\u9884\u671f\u5de5\u4f5c\u3002     - \u95ee\u9898\u51fa\u5728</code>s3 = malloc(len1 + len2 + 1);<code>\u4e0a     - \u8be5\u51fd\u6570</code>my_strcat<code>\u5c06\u53c2\u6570\u4f5c\u4e3a s3 \u53c2\u6570\uff0c\u8be5\u53c2\u6570\u662f\u6307\u5411</code>char<code>\u6570\u7ec4\u7684\u6307\u9488\u3002     - \u8c03\u7528\u51fd\u6570\u65f6\uff0c s3 \u5c06\u590d\u5236\u5230\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf s3 \u4e2d\u3002\u56e0\u6b64\uff0c\u8be5</code>malloc<code>\u51fd\u6570\u4e3a\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u5185\u5b58\uff0c\u800c\u4e0d\u662f \u4e2d</code>main` \u7684\u539f\u59cb s3 \u53d8\u91cf s3 \u3002     - \u51fd\u6570\u8fd4\u56de\u540e\uff0c\u4e3a\u5c40\u90e8\u53d8\u91cf s3 \u5206\u914d\u7684\u5185\u5b58\u4e0d\u88ab\u4f7f\u7528\uff0c\u56e0\u6b64\u662f\u5185\u5b58\u6cc4\u6f0f\u3002\u539f\u6765\u7684 s3 in main \u6ca1\u6709\u88ab\u4fee\u6539\uff0c\u6240\u4ee5\u5b83\u4ecd\u7136\u662f\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u3002</p> <p>\u7c7b\u4f3c\u5730\uff0c\u4f20\u5165function\u4e2d\u7684<code>array</code>\u5b9e\u9645\u4e0a\u662f\u4e2a<code>pointer</code>\uff1b</p> <p>```c  //On a 64-bit machine, the output of the following code fragment is __.   void print_soyo(char soyo[]) {   printf(\"%lu\\n\", sizeof(soyo));   }</p> <p>int main() {     char soyo[] = \"Soyosan\\0Love\";     print_soyo(soyo);     return 0;   }   //output:8   //\u56e0\u4e3asoyo\u4f5c\u4e3a\u4e00\u4e2aparameter\u662fpointer\uff0c\u572864-bit machine\u4e0a\u4e3a8 byte; ```</p>  <li> <p>\u5b8f\u51fd\u6570,\u5e76\u6ca1\u6709\u201c\u8fd4\u56de\u503c\u201d</p> <p>```c</p> </li> <li> <p>C\u6807\u51c6\u89c4\u5b9a\u8f6c\u4e49\u5e8f\u5217\u6700\u591a\u75313\u4e2a\u516b\u8fdb\u5236\u6570\u5b57\u7ec4\u6210</p> <p><code>c char a[]=\"\\000\"; //  {'\\0','\\0'} char b[]=\"\\0000\";//  {'\\0','0','\\0'} char c[]=\"\\101\" //{'A','\\0'} char d[]=\"\\1011\" //{'A'.'1','\\0'}</code></p> </li> <li> <p>\u6ce8\u610f<code>++</code>\u7684\u7684\u8fd4\u56de\u503c\uff01\uff01\uff01</p> <p>```c</p>","text":""},{"location":"cs/pl/c_cpp/C/c/#define-fabx-axb","title":"define f(a,b,x) a*x+b <p>printf(\"%d,%d\\n\", f(1,2,3), f(f(1,2,3),4,2)); / \u4e2d\u95f4\u6ca1\u6709\u7a7a\u683c / //output:5,11 //11=13+22+4 ```</p>","text":""},{"location":"cs/pl/c_cpp/C/c/#include_3","title":"include <p>int main(void) {       int x[5] = { 2, 4, 6, 8, 10 }, p, *pp;</p> <pre><code>  p = x;\n  pp = &amp;p;\n  printf(\"%d \", *(p++));  /* \u6570\u5b57\u540e\u6709\u4e00\u4e2a\u7a7a\u683c */\n  printf(\"%d\\n\", **pp);\n\n  return 0;\n</code></pre> <p>} //output:2 4</p> <p>const char st[] = {\"Hello\", \"world\", \"!\"}, *p = st; </p> <p>p++; printf(\"%s-%c\\n\", p, p); (p)++;  printf(\"%s-%c-%c\\n\", p, p, (*p)+1); //output: world-w orld-o-p ```</p>","text":""},{"location":"cs/pl/python/CS61A/cs61a/","title":"Week 1","text":""},{"location":"cs/pl/python/CS61A/cs61a/#namesassignment","title":"Names,Assignment","text":"<ul> <li> <p>\u5728Python\u4e2d\uff0c<code>Name</code>\uff08\u540d\u79f0\uff09\u662f\u6307\u5411\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u5728Python\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u4e1c\u897f\u90fd\u662f\u5bf9\u8c61\uff0c\u5305\u62ec\u51fd\u6570\u3001\u53d8\u91cf\u3001\u6570\u636e\u7ed3\u6784\u7b49\u3002Name\u53ef\u4ee5\u662f\u4e00\u4e2a\u53d8\u91cf\u540d\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u51fd\u6570\u540d\u3002\u5f53\u4f60\u521b\u5efa\u4e00\u4e2a\u53d8\u91cf\u6216\u51fd\u6570\u65f6\uff0c\u4f60\u5b9e\u9645\u4e0a\u662f\u5728\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u79f0\uff08\u6216\u6807\u8bc6\u7b26\uff09\uff0c\u901a\u8fc7\u8fd9\u4e2a\u540d\u79f0\u53ef\u4ee5\u8bbf\u95ee\u6216\u8c03\u7528\u8be5\u5bf9\u8c61\u3002</p> </li> <li> <p>\u5728Python\u4e2d\uff0c<code>assignment</code>\uff08\u8d4b\u503c\uff09\u662f\u5c06\u4e00\u4e2a\u503c\u7ed1\u5b9a\u5230\u4e00\u4e2a\u540d\u79f0\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u53d8\u91cf\u540d\uff09\u7684\u8fc7\u7a0b\u3002\u8d4b\u503c\u64cd\u4f5c\u4f7f\u7528\u7b49\u53f7=\u6765\u5b8c\u6210\u3002\u5f53\u8fdb\u884c\u8d4b\u503c\u65f6\uff0c\u7b49\u53f7\u53f3\u4fa7\u7684\u8868\u8fbe\u5f0f\u4f1a\u88ab\u8ba1\u7b97\uff0c\u7136\u540e\u5176\u7ed3\u679c\u4f1a\u88ab\u7ed1\u5b9a\u5230\u7b49\u53f7\u5de6\u4fa7\u7684\u540d\u79f0\u4e0a\u3002</p> </li> </ul> <pre><code>&gt;&gt;&gt; f = min\n&gt;&gt;&gt; f = max\n&gt;&gt;&gt; g, h = min, max\n&gt;&gt;&gt; max = g\n&gt;&gt;&gt; max(f(2,g(h(1,5),3)),4)\n3\n</code></pre> <ul> <li>\u5728\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4e0d\u540c\u4e8eC\uff0c\u6211\u4eec\u5c06\u5185\u7f6e\u51fd\u6570\u8d4b\u503c\u7ed9\u53d8\u91cf\u540e\uff0c\u5982<code>f = max</code>\uff0c\u90a3\u4e48f\u5bf9\u5e94\u7684\u5c31\u662fmax\u51fd\u6570\u7684\u5185\u5bb9\uff0c\u5e76\u4e0d\u4f1a\u968f\u7740max\u7684\u6539\u53d8\u800c\u6539\u53d8</li> </ul>"},{"location":"cs/pl/python/CS61A/cs61a/#defining-functions","title":"Defining Functions","text":"<ul> <li>\u7eaf\u51fd\u6570\uff08Pure Functions\uff09 \u662f\u8fd9\u6837\u4e00\u79cd\u51fd\u6570\uff0c\u5b83\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u4e3b\u8981\u6761\u4ef6\uff1a<ul> <li>\u76f8\u540c\u7684\u8f93\u5165\u603b\u662f\u4ea7\u751f\u76f8\u540c\u7684\u8f93\u51fa\u3002\u7eaf\u51fd\u6570\u4e0d\u4f9d\u8d56\u4e8e\u5e76\u4e14\u4e5f\u4e0d\u4fee\u6539\u5b9a\u4e49\u5728\u51fd\u6570\u5916\u90e8\u7684\u72b6\u6001\u3002\u8fd9\u610f\u5473\u7740\uff0c\u7ed9\u5b9a\u76f8\u540c\u7684\u53c2\u6570\uff0c\u65e0\u8bba\u8c03\u7528\u591a\u5c11\u6b21\uff0c\u7eaf\u51fd\u6570\u90fd\u4f1a\u8fd4\u56de\u76f8\u540c\u7684\u7ed3\u679c\u3002</li> <li>\u6ca1\u6709\u526f\u4f5c\u7528\u3002\u7eaf\u51fd\u6570\u4e0d\u4f1a\u6539\u53d8\u4efb\u4f55\u5916\u90e8\u72b6\u6001\uff08\u4f8b\u5982\uff0c\u4e0d\u4fee\u6539\u5168\u5c40\u53d8\u91cf\uff0c\u4e0d\u5199\u5165\u6570\u636e\u5e93\u7b49\uff09\uff0c\u4e5f\u4e0d\u4f1a\u6709\u5982\u6253\u5370\u5230\u63a7\u5236\u53f0\u3001\u5199\u6587\u4ef6\u8fd9\u6837\u7684\u64cd\u4f5c\u3002</li> </ul> </li> </ul> <pre><code>def adder(a,b):\n    return a+b\n</code></pre> <ul> <li>\u975e\u7eaf\u51fd\u6570\uff08Non-Pure Functions\uff09 \u662f\u6307\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u7eaf\u51fd\u6570\u6761\u4ef6\u7684\u51fd\u6570\u3002\u5b83\u4eec\u53ef\u80fd\u4f9d\u8d56\u4e8e\u5916\u90e8\u72b6\u6001\uff0c\u6216\u8005\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u6539\u53d8\u5916\u90e8\u72b6\u6001\uff08\u4ea7\u751f\u526f\u4f5c\u7528\uff09\u3002</li> </ul> <pre><code>counter = 0\n\ndef increment():\n    global counter\n    counter += 1\n    return counter\n</code></pre> <ul> <li>\u5728Python\u4e2d\uff0c<code>function signature</code>\uff08\u51fd\u6570\u7b7e\u540d\uff09\u6307\u7684\u662f\u51fd\u6570\u5b9a\u4e49\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u5305\u62ec\u51fd\u6570\u7684\u540d\u79f0\u3001\u63a5\u6536\u7684\u53c2\u6570\uff08\u5305\u62ec\u4f4d\u7f6e\u53c2\u6570\u3001\u5173\u952e\u5b57\u53c2\u6570\u3001\u53ef\u53d8\u4f4d\u7f6e\u53c2\u6570\u3001\u53ef\u53d8\u5173\u952e\u5b57\u53c2\u6570\u7b49\uff09\u4ee5\u53ca\u6709\u65f6\u5019\u5305\u62ec\u8fd4\u56de\u7c7b\u578b\u7684\u6ce8\u89e3\u3002\u51fd\u6570\u7b7e\u540d\u4e3a\u8c03\u7528\u8005\u63d0\u4f9b\u4e86\u51fd\u6570\u5982\u4f55\u88ab\u8c03\u7528\u7684\u4fe1\u606f\u3002</li> </ul> <pre><code>def greet(name: str) -&gt; str:\n    return \"Hello, \" + name\n</code></pre> <ul> <li>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u51fd\u6570\u7b7e\u540d\u662f<code>greet(name: str) -&gt; str</code>\uff0c\u5b83\u544a\u8bc9\u6211\u4eec\uff1a</li> <li>\u51fd\u6570\u7684\u540d\u79f0\u662fgreet\u3002</li> <li>\u5b83\u63a5\u53d7\u4e00\u4e2a\u540d\u4e3aname\u7684\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u88ab\u6ce8\u89e3\u4e3astr\u7c7b\u578b\u3002</li> <li>\u5b83\u8fd4\u56de\u4e00\u4e2astr\u7c7b\u578b\u7684\u503c\u3002</li> </ul> <pre><code>def divide_exact(n,d=10):\n    return n//d, n%d\n</code></pre> <ul> <li><code>d=10</code>\u5e76\u4e0d\u662f\u4e3ad\u8d4b\u503c\uff0c\u800c\u662f\u5f53\u6ca1\u6709\u4f20\u5165d\u7684\u503c\u65f6\uff0c\u4f1a\u4e3ad\u9ed8\u8ba4\u8d4b\u503c\u4e3a10</li> </ul>"},{"location":"cs/pl/python/CS61A/cs61a/#print-and-none","title":"Print and None","text":"<ul> <li> <p>\u5728Python\u4e2d\uff0c<code>None</code>\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5e38\u91cf\uff0c\u7528\u4e8e\u8868\u793a\u7a7a\u503c\u6216\u8005\u65e0\u503c\u7684\u72b6\u6001\u3002\u5b83\u662f<code>NoneType</code>\u7c7b\u578b\u7684\u552f\u4e00\u503c\u3002<code>None</code>\u7ecf\u5e38\u7528\u4e8e\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u8868\u793a\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u4efb\u4f55\u5177\u4f53\u7684\u503c\u3002\u540c\u65f6\uff0c\u5b83\u4e5f\u5e38\u7528\u4e8e\u53d8\u91cf\u521d\u59cb\u5316\uff0c\u4ee5\u53ca\u8868\u793a\u67d0\u4e9b\u5bf9\u8c61\u6216\u53d8\u91cf\u5c1a\u672a\u88ab\u8d4b\u4e88\u5177\u4f53\u7684\u503c\u3002</p> </li> <li> <p>\u5728Python\u4e2d\uff0c<code>print</code>\u662f\u4e00\u4e2a\u5185\u7f6e\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u4fe1\u606f\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\uff08\u901a\u5e38\u662f\u5c4f\u5e55\uff09\u3002\u5b83\u53ef\u4ee5\u63a5\u53d7\u591a\u4e2a\u53c2\u6570\uff0c\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff08\u5982\u679c\u5b83\u4eec\u4e0d\u5df2\u7ecf\u662f\u5b57\u7b26\u4e32\u7684\u8bdd\uff09\uff0c\u7136\u540e\u8f93\u51fa\u8fd9\u4e9b\u5b57\u7b26\u4e32\uff0c\u53c2\u6570\u4e4b\u95f4\u9ed8\u8ba4\u7528\u7a7a\u683c\u5206\u9694\uff0c\u6700\u540e\u9ed8\u8ba4\u8f93\u51fa\u4e00\u4e2a\u6362\u884c\u7b26\u3002\u540c\u65f6<code>print</code>\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u5728\u8c03\u7528\u7684\u65f6\u5019\u5c31\u4f1a\u8fd4\u56deNone</p> </li> </ul> <pre><code>&gt;&gt;&gt; print(1)\n1\n&gt;&gt;&gt; print(1,2)\n1 2\n&gt;&gt;&gt; print(print(1),print(2))\n1\n2\nNone None\n</code></pre>"},{"location":"cs/pl/python/CS61A/cs61a/#boolean-contexts","title":"Boolean Contexts","text":"<ul> <li>False Values in Python:<ul> <li>False</li> <li>0</li> <li>''</li> <li>None</li> </ul> </li> <li>True Values in Python: Anything else</li> </ul>"},{"location":"cs/pl/python/CS61A/cs61a/#short-circuiting","title":"Short Circuiting","text":"<ul> <li><code>and</code>\u64cd\u4f5c\u7b26\uff0cPython\u4f1a\u5148\u8bc4\u4f30\u5de6\u4fa7\u8868\u8fbe\u5f0f\uff0c\u82e5\u4e3a<code>False</code>\u5219\u7ed3\u679c\u4e3a\u5de6\u4fa7\u8868\u8fbe\u5f0f\u7684\u503c\uff1b\u82e5\u4e3a<code>True</code>,\u5219\u7ed3\u679c\u4e3a\u53f3\u4fa7\u8868\u8fbe\u5f0f\u7684\u503c</li> <li><code>or</code>\u64cd\u4f5c\u7b26\uff0cPython\u4f1a\u5148\u8bc4\u4f30\u5de6\u4fa7\u8868\u8fbe\u5f0f\uff0c\u82e5\u4e3a<code>False</code>\u5219\u7ed3\u679c\u4e3a\u53f3\u4fa7\u8868\u8fbe\u5f0f\u7684\u503c\uff1b\u82e5\u4e3a<code>True</code>,\u5219\u7ed3\u679c\u4e3a\u5de6\u4fa7\u8868\u8fbe\u5f0f\u7684\u503c</li> </ul> <pre><code>&gt;&gt;&gt; True and 13\n13\n&gt;&gt;&gt; False or 0\n0\n&gt;&gt;&gt; not 10\nFalse\n&gt;&gt;&gt; not None\nTrue\n</code></pre>"},{"location":"cs/pl/python/CS61A/cs61a/#week-2","title":"Week 2","text":""},{"location":"cs/pl/python/CS61A/cs61a/#locally-defined-functions","title":"Locally Defined Functions","text":"<pre><code>def make_adder(n):\n    def adder(k):\n        return k+n\n    return adder\n\"\"\"\n&gt;&gt;&gt; add_three = make_adder(3)\n&gt;&gt;&gt; add_three(4)\n7\n\"\"\"\n</code></pre> <ul> <li><code>make_adder(n)</code>\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u4e86\u53e6\u4e00\u4e2a\u51fd\u6570<code>adder(k)</code>\u3002<code>adder</code>\u51fd\u6570\u5c06\u5176\u53c2\u6570<code>k</code>\u4e0e\u5916\u90e8\u51fd\u6570\u7684\u53c2\u6570<code>n</code>\u76f8\u52a0\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002</li> <li>\u5f53<code>make_adder</code>\u88ab\u8c03\u7528\u65f6\uff0c\u6bd4\u5982<code>make_adder(3)</code>\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2aadder\u51fd\u6570\uff0c\u8fd9\u4e2a<code>adder</code>\u51fd\u6570\u5c06\u4f1a\u628a\u5b83\u7684\u53c2\u6570\u548c3\u76f8\u52a0\u3002</li> </ul>"},{"location":"cs/pl/python/CS61A/cs61a/#functions-that-accept-arbitrary-arguments","title":"Functions that accept arbitrary arguments","text":"<ul> <li>\u6211\u4eec\u60f3\u7f16\u5199\u4e00\u4e2a\u63a5\u53d7\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\u7684\u51fd\u6570\uff0c\u7136\u540e\u4f7f\u7528\u8fd9\u4e9b\u53c2\u6570\u8c03\u7528\u53e6\u4e00\u4e2a\u51fd\u6570</li> <li>\u8fd0\u7528 *args \u4ee5\u63a5\u53d7\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570</li> </ul> <pre><code>&gt;&gt;&gt; def printed(f):\n...     def print_and_return(*args):\n...         result = f(*args)\n...         print('Result:', result)\n...         return result\n...     return print_and_return\n&gt;&gt;&gt; printed_pow = printed(pow)\n&gt;&gt;&gt; printed_pow(2, 8)  # *args represents the arguments (2, 8)\nResult: 256\n256\n&gt;&gt;&gt; printed_abs = printed(abs)\n&gt;&gt;&gt; printed_abs(-10)  # *args represents one argument (-10)\nResult: 10\n10\n</code></pre> <pre><code>def make_averaged(original_function, samples_count=1000):\n    \"\"\"Return a function that returns the average value of ORIGINAL_FUNCTION\n    called SAMPLES_COUNT times.\n\n    To implement this function, you will have to use *args syntax.\n\n    &gt;&gt;&gt; dice = make_test_dice(4, 2, 5, 1)\n    &gt;&gt;&gt; averaged_dice = make_averaged(roll_dice, 40)\n    &gt;&gt;&gt; averaged_dice(1, dice)  # The avg of 10 4's, 10 2's, 10 5's, and 10 1's\n    3.0\n    \"\"\"\n    def averaged(*args):\n        total = 0\n        for i in range (samples_count):\n            total += original_function(*args)\n        return total/samples_count\n    return averaged\n</code></pre>"},{"location":"cs/pl/python/CS61A/cs61a/#high-order-function","title":"High Order Function","text":"<p>\u9ad8\u9636\u51fd\u6570\uff08High Order Function\uff09\u662f\u6307\u81f3\u5c11\u6ee1\u8db3\u4e0b\u5217\u4e00\u4e2a\u6761\u4ef6\u7684\u51fd\u6570\uff1a - \u63a5\u53d7\u4e00\u4e2a\u6216\u591a\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u3002 - \u8fd4\u56de\u53e6\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u7ed3\u679c\u3002 - \u9ad8\u9636\u51fd\u6570\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u5b83\u4eec\u5141\u8bb8\u51fd\u6570\u64cd\u4f5c\u51fd\u6570\uff0c\u63d0\u4f9b\u4e86\u6781\u5927\u7684\u7075\u6d3b\u6027\u548c\u8868\u8fbe\u529b\u3002\u4f8b\u5982\uff0cPython\u4e2d\u7684<code>map</code>\u548c<code>filter</code>\u90fd\u662f\u9ad8\u9636\u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u4eec\u63a5\u53d7\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u3002\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u88c5\u9970\u5668\uff08Decorator\uff09\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u8f93\u5165\u5e76\u8fd4\u56de\u4e00\u4e2a\u589e\u5f3a\u7248\u7684\u51fd\u6570\u3002</p> <ul> <li>\u9ad8\u9636\u51fd\u6570\uff0c\u6ce8\u610f\u662f\u5728\u8c03\u7528\u51fd\u6570\u8fd8\u662f\u5728\u8d4b\u503c</li> </ul> <pre><code>def cake():\n    print('beets')\n    def pie:\n        print('sweets')\n        return 'cake'\n    return pie\n\"\"\"\n&gt;&gt;&gt; chocolate = cake()\nbeets\n&gt;&gt;&gt; chocolate\n&lt;function pie at ...&gt;\n&gt;&gt;&gt; chocolate()\nsweets\n'cake'\n&gt;&gt;&gt; more_chocolate, more_cake = chocolate(),cake\nsweets\n&gt;&gt;&gt; more_chocolate\n'cake'\n\"\"\"\ndef snake(x,y):\n    if cake == more_cake:\n        return chocolate\n    else:\n        return x+y\n\"\"\"\n&gt;&gt;&gt; snake(10,20)\n&lt;function pie at ...&gt;\n&gt;&gt;&gt; snake(10,20)()\nsweets\n'cake'\n&gt;&gt;&gt; cake = 'cake'\n&gt;&gt;&gt; snake(10,20)\n30\n</code></pre>"},{"location":"cs/pl/python/CS61A/cs61a/#horse-and-mask","title":"Horse and Mask","text":"<ul> <li>\u5f62\u53c2\u3001frame\u7684\u7ed5\u4e2d\u7ed5\uff0c\u641e\u6e05\u6bcf\u4e00\u4e2aframe\u548c\u5b83\u7684parent</li> </ul> <pre><code>def horse(mask):\n    horse = mask\n    def mask(horse):\n        return horse\n    return horse(mask)\n\nmask = lambda horse: horse(2)\n\"\"\"\n&gt;&gt;&gt; horse(mask)\n2\n\"\"\"\n</code></pre> <ul> <li>\u5728<code>global frame</code>\u4e2d\u6211\u4eec\u5b9a\u4e49\u4e86\u4e24\u4e2a\u51fd\u6570\uff0c\u4e00\u4e2a\u662f<code>horse</code>\uff0c\u4e00\u4e2a\u662f\u7531lambda\u8868\u8fbe\u5f0f\u6784\u6210\u7684<code>mask</code></li> <li>\u7136\u540e\u8c03\u7528<code>horse(mask)</code>\uff0c\u8fd9\u91cc\u662f\u5728global\u4e0b\u8c03\u7528\u7684\uff0c\u6240\u4ee5<code>horse</code>\u548c<code>mask</code>\u5c31\u6307\u5411\u4e0a\u6587\u7684\u4e24\u8005</li> <li>\u7136\u540e\u8fdb\u5165<code>f1: horse,[parent = Global]</code>\uff0c\u5f00\u59cb\u6267\u884cbody\uff0c\u6267\u884c\u5230<code>horse = mask</code>\uff0c\u5448\u73b0\u4e0b\u56fe\u7684\u5173\u7cfb\uff1a </li> <li>\u5728\u5b9a\u4e49\u4e86\u5185\u90e8\u7684<code>mask</code>\u51fd\u6570\u540e\uff0c\u8fd4\u56de<code>horse(mask)</code>\uff0c\u8fd9\u65f6\u5019\u4e24\u8005\u6240\u6307\u5bf9\u8c61\u6709\u6240\u53d8\u5316\uff1a </li> <li>\u4e8e\u662f\u8fdb\u5165<code>f2: \u03bb &lt;line 7&gt; [parent = Global]</code>\uff0c\u5728\u8fd9\u4e2a\u51fd\u6570\u91cc <code>horse</code> \u5176\u5b9e\u6307\u5411\u4e4b\u524d\u5b9a\u4e49\u7684\u5185\u90e8\u51fd\u6570[parent = f1] </li> <li>\u7136\u540e\u56e0\u4e3a\u5728<code>f2</code>\u91cc\u9762\u8fd4\u56de\u7684\u662f<code>horse(2)</code>\uff0c\u6240\u4ee5\u8fdb\u5165<code>f3: mask [parent = f1]</code>\uff0c\u56e0\u800c<code>return 2</code> </li> <li>\u53c8\u56de\u5230<code>f2</code>\u8fd4\u56de2\uff0c\u53c8\u56de\u5230<code>f1</code>\u8fd4\u56de2  </li> </ul>"},{"location":"cs/pl/python/CS61A/cs61a/#lambda-expression","title":"Lambda Expression","text":"<ul> <li>Lambda \u8868\u8fbe\u5f0f\uff0c\u4e5f\u79f0\u4e3a\u533f\u540d\u51fd\u6570\uff0c\u662f\u4e00\u79cd\u5728 Python \u4e2d\u5feb\u901f\u5b9a\u4e49\u5355\u884c\u7684\u6700\u5c0f\u51fd\u6570\u7684\u65b9\u5f0f\u3002Lambda \u51fd\u6570\u53ef\u4ee5\u63a5\u53d7\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\uff0c\u4f46\u53ea\u80fd\u6709\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u7ed3\u679c\u4f1a\u88ab\u8fd9\u4e2a\u51fd\u6570\u81ea\u52a8\u8fd4\u56de\u3002</li> </ul> <pre><code>add = lambda x, y: x + y\nprint(add(5, 3))  # \u8f93\u51fa: 8\n\nis_even = lambda x: x % 2 == 0\nprint(is_even(4))  # \u8f93\u51fa: True\nprint(is_even(5))  # \u8f93\u51fa: False\n\nmake_adder = lambda x:lambda y:x+y\nadder = make_adder(3)\nprint(adder(5)) #\u8f93\u51fa\uff1a8\n</code></pre> <ul> <li>\u7ed3\u5408\u9ad8\u9636\u51fd\u6570\u548clambda\u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u4e00\u4e9b\u529f\u80fd\u5f3a\u5927\u7684\u51fd\u6570\uff0c\u6bd4\u5982inverse</li> </ul> <pre><code>def search(f):\n    x = 0\n    while True:\n        if f(x):\n            return x\n        x += 1\n# \u8fd9\u4e2a\u51fd\u6570\u7528\u6765\u5bfb\u627e\u6ee1\u8db3\u6761\u4ef6\u7684x\n\ndef inverse(f):\n    return lambda y:search(lambda x:f(x) == y)\n# \u8fd9\u4e2a\u9ad8\u9636\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5355\u53c2\u51fd\u6570search\n# \u5176\u4e2d\u5411search\u4f20\u5165\u4e86 f(x) == y \u7684\u5224\u65ad\u51fd\u6570\n\n\"\"\"\n&gt;&gt;&gt; square = lambda x: x*x\n&gt;&gt;&gt; sqrt = inverse(square)\n&gt;&gt;&gt; sqrt(16)\n4\n\"\"\"\n# \u5f53\u7136\u8fd9\u4e2a\u7248\u672c\u53ea\u9002\u7528\u4e8e\u666e\u901a\u7684\u6574\u6570\uff0c\u66f4\u7cbe\u786e\u7684\u5e73\u65b9\u6839\u6c42\u6cd5\u53ef\u4ee5\u7528\u725b\u987f\u6cd5\u6216\u8005\u5e73\u65b9\u6839\u5012\u6570\u7b97\u6cd5\n</code></pre>"},{"location":"cs/pl/python/CS61A/cs61a/#currying","title":"Currying","text":"<ul> <li>Currying \u662f\u4e00\u79cd\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u5e38\u89c1\u7684\u6280\u672f\uff0c\u5b83\u6307\u7684\u662f\u5c06\u4e00\u4e2a\u591a\u53c2\u6570\u7684\u51fd\u6570\u8f6c\u6362\u6210\u4e00\u7cfb\u5217\u4f7f\u7528\u4e00\u4e2a\u53c2\u6570\u7684\uff0cHigher-Order\u7684\u51fd\u6570\u7684\u8fc7\u7a0b\u3002</li> </ul> <pre><code>def curry2(f):\n    def g(x):\n        def h(y):\n            return f(x,y)\n        return h\n    return g\n\n\"\"\"\n&gt;&gt;&gt; from operator import add\n&gt;&gt;&gt; m = curry2(add)\n&gt;&gt;&gt; add_three = m(3)\n&gt;&gt;&gt; add_three(2)\n5\n&gt;&gt;&gt; curry2 = lambda f: lambda: x: lambda y: f(x,y)\n...\n...\n\"\"\"\n</code></pre>"},{"location":"cs/pl/python/CS61A/cs61a/#decorators","title":"Decorators","text":"<ul> <li>\u88c5\u9970\u5668\uff08Decorator\uff09\u662f Python \u4e2d\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u5141\u8bb8\u4f60\u5728\u4e0d\u4fee\u6539\u539f\u59cb\u51fd\u6570\u6216\u65b9\u6cd5\u5b9a\u4e49\u7684\u60c5\u51b5\u4e0b\uff0c\u7ed9\u5b83\u4eec\u6dfb\u52a0\u989d\u5916\u7684\u529f\u80fd\u3002\u88c5\u9970\u5668\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u3002\u4f7f\u7528\u88c5\u9970\u5668\u53ef\u4ee5\u5b9e\u73b0\u5f88\u591a\u529f\u80fd\uff0c\u6bd4\u5982\u8bbf\u95ee\u63a7\u5236\u3001\u65e5\u5fd7\u8bb0\u5f55\u3001\u6d4b\u91cf\u6267\u884c\u65f6\u95f4\u7b49\u3002</li> <li>\u88c5\u9970\u5668\u7684\u57fa\u672c\u8bed\u6cd5\u662f\u5728\u51fd\u6570\u5b9a\u4e49\u524d\u4f7f\u7528 <code>@</code> \u7b26\u53f7\u52a0\u4e0a\u88c5\u9970\u5668\u7684\u540d\u79f0\u3002</li> <li>\u4f46\u5bf9\u4e8elambda\u8868\u8fbe\u5f0f\u5c31\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528<code>@</code>\uff0c\u800c\u662f\u8c03\u7528<code>Decorator</code>\u51fd\u6570 </li> </ul> <pre><code>def trace1 (fn):\n    \"\"\"Returns a version of fn that first prints before it is called\n    fn - a function of 1 argument\n    \"\"\"\n    def trace(x):\n        print('Calling',fn,'on argument',x)\n        return fn(x)\n    return trace\n\n@trace1\ndef square(x):\n    return x*x\n\n@trace1\ndef a_function:\n    return 1\n\n\"\"\"\n&gt;&gt;&gt; square(4)\nCalling &lt;function square at ...&gt; on argument 4\n16\n\"\"\"\n</code></pre>"},{"location":"cs/pl/python/CS61A/cs61a/#recursion","title":"Recursion","text":"<ul> <li>For Instance</li> </ul> <pre><code>def print_sum(x):\n    print(x)\n    def next_sum(y):\n        return print_sum(x+y)\n    return next_sum\n\nprint_sum(1)(3)(5)\n</code></pre> <ul> <li>\u9012\u5f52\u51fd\u6570\uff08Recursion Functions\uff09 \u662f\u5728\u5176\u5b9a\u4e49\u4e2d\u8c03\u7528\u81ea\u8eab\u7684\u51fd\u6570\u3002</li> <li>\u57fa\u672c\u60c5\u51b5\uff08Base Case\uff09\uff1a\u8fd9\u662f\u9012\u5f52\u505c\u6b62\u7684\u6761\u4ef6\uff0c\u6ca1\u6709\u5b83\uff0c\u9012\u5f52\u5c06\u65e0\u9650\u5faa\u73af\u4e0b\u53bb\u3002</li> <li>\u9012\u5f52\u6b65\u9aa4\uff08Recursive Step\uff09\uff1a\u5728\u8fd9\u4e00\u6b65\u4e2d\uff0c\u51fd\u6570\u8c03\u7528\u81ea\u8eab\uff0c\u901a\u5e38\u662f\u7528\u4e00\u7ec4\u4e0d\u540c\u7684\u53c2\u6570\u3002</li> </ul>"},{"location":"cs/pl/python/CS61A/cs61a/#mutual-recursion","title":"Mutual Recursion","text":"<ul> <li>\u4e92\u9012\u5f52\uff08Mutual Recursion\uff09 \u662f\u6307\u4e24\u4e2a\u6216\u591a\u4e2a\u51fd\u6570\u76f8\u4e92\u8c03\u7528\u5bf9\u65b9\u4ee5\u5b9e\u73b0\u9012\u5f52\u7684\u60c5\u51b5\u3002</li> </ul>"},{"location":"cs/pl/python/CS61A/cs61a/#luhn-algorithm","title":"Luhn Algorithm","text":"<ul> <li>\u4ece\u53f3\u8fb9\u7b2c\u4e8c\u4e2a\u6570\u5b57\u5f00\u59cb\uff0c\u6bcf\u9694\u4e00\u4e2a\u6570\u5b57\u4e58\u4ee52\u3002</li> <li>\u5982\u679c\u4e58\u4ee52\u7684\u7ed3\u679c\u662f\u4e24\u4f4d\u6570\uff0c\u5219\u5c06\u8fd9\u4e24\u4f4d\u6570\u76f8\u52a0\u5f97\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u6570\u5b57(e.g. 10 -&gt; 1 + 0 = 1)</li> <li>\u7136\u540e\u52a0\u548c\u6240\u6709\u6570\u5b57\uff0c\u5982\u679c\u8fd9\u4e2a\u603b\u548c\u53ef\u4ee5\u88ab10\u6574\u9664\u5219\u662f\u6709\u6548\u7684 </li> </ul> <pre><code>def luhn_sum(n):\n    if n &lt; 10:\n        return n\n    else :\n        all_but_last, last = split(n)\n        return luhn_sum_double(all_but_last) + last\n\ndef luhn_sum_double(n):\n    all_but_last, last = split(n)\n    double_last_sum = sum_digits(2 * last)\n    if n &lt; 10:\n        return double_last_sum\n    else:\n        return luhn_sum(all_but_last) + double_last_sum\n</code></pre>"},{"location":"cs/pl/python/CS61A/cs61a/#tree-recursion","title":"Tree Recursion","text":"<ul> <li>\u6811\u9012\u5f52\uff08Tree Recursion\uff09 \u662f\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u9012\u5f52\u6a21\u5f0f\uff0c\u5176\u4e2d\u4e00\u4e2a\u51fd\u6570\u5728\u5176\u6267\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u6b62\u4e00\u6b21\u5730\u8c03\u7528\u81ea\u8eab\u3002\u6bcf\u6b21\u51fd\u6570\u8c03\u7528\u81ea\u8eab\u65f6\uff0c\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5206\u652f\uff0c\u5728\u903b\u8f91\u4e0a\u5f62\u6210\u4e86\u4e00\u68f5\u6811\u3002 </li> </ul> <p>\u4f8b\u5982\uff1a<code>Cascade</code>\u51fd\u6570</p> <pre><code>def cascade(n):\n    if n &lt; 10:\n        print(n)\n    else :\n        print(n)\n        cascade(n // 10)\n        print(n)\n\n\"\"\"\n&gt;&gt;&gt; cascade(123)\n123\n12\n1\n12\n123\n\"\"\"\n</code></pre> <ul> <li>Inverse Cascade</li> </ul> <pre><code>\"\"\"\n1\n12\n123\n1234\n123\n12\n1\n\"\"\"\n# \u5bf9\u4e8e\u5f62\u5982\u8fd9\u6837\u7684inverse_cascade\uff0c\u6211\u4eec\u6253\u7b97\u628a\u51fd\u6570\u62c6\u5206\u6210\u4e09\u90e8\u5206\uff1agrow\uff0cprint\uff0cshrink\ndef inverse_cascade(n):\n    grow(n)\n    print(n)\n    shrink(n)\n\n#\u7136\u540e\u5f15\u5165f_then_g\u51fd\u6570\uff0c\u6765\u8c03\u6574\u51fd\u6570\u7684\u524d\u540e\u8c03\u7528\u987a\u5e8f\ndef f_then_g(f,g,n):\n    if n:\n        f(n)\n        g(n)\n\n#\u6700\u540e\u5b9a\u4e49grow\u548cshrink\ngrow = lambda n: f_then_g(grow, print, n // 10)\nshrink = lambda n: f_then_g(print, shrink, n // 10)\n</code></pre> <ul> <li>Counting Partitions</li> <li><code>count_partitions(n,m)</code>\u8868\u793a\u7528\u4e0d\u8d85\u8fc7m\u7684\u6b63\u6574\u6570\u6765\u8868\u793an\uff0c\u5176\u4e2d\u8fd9\u4e9b\u6570\u7684\u6392\u5217\u6210\u975e\u9012\u51cf\u7684\u987a\u5e8f\uff0c\u5c31\u53eb\u505an\u7684\u5212\u5206\u6570 </li> </ul> <pre><code>def count_partitions(n,m):\n    if n == 0:\n        return 1 #\u4ec0\u4e48\u90fd\u6ca1\u6709\u4e5f\u662f\u4e00\u79cd\u5212\u5206\n    elif n &lt; 0:\n        return 0\n    elif m == 0:\n        return 0\n    else:\n        with_m = count_partitions(n-m,m)\n        without_m = count_partitions(n,m-1)\n\nresult = count_partitions(5,3)\n# 1 + 1 + 1 + 1 + 1 = 5\n# 1 + 1 + 1 + 2 =5\n# 1 + 2 + 2 = 5\n# 1 + 1 + 3 = 5\n# 2 + 3 = 5\n</code></pre>"}]}